update scores should not update any caches since they are both unregistered,m network score service . update scores ( new scored network [ ] { scored_network } ) ;,scores update caches,success,sub,4,5,2,4,4,4,5,2
host must have real keyboard focus .,if ( ! m host . is focused ( ) && ! m host . request focus ( ) ) { return false ; },host have focus,success,sub,4,4,2,4,4,4,5,2
all surrogate pairs with this lead surrogate have only irrelevant data,if ( ( norm32 & mask ) == __num__ ) { return __num__ ; } else { return get norm32 from surrogate pair ( norm32 @$ args . c ) ; },pairs have data,success,sub,4,4,2,4,4,4,5,2
one of the 2 threads should get an optimistic lock exception,assert equals ( __num__ @$ exceptions . size ( ) ) ; assert true ( exceptions . get ( __num__ ) instanceof activiti optimistic locking exception ) ;,one get exception,success,sub,4,4,2,4,4,4,5,2
the facade only contains the fallback behavior,assert . assert true ( router facade . global policy map . contains key ( def queue key ) && router facade . global policy map . size ( ) == __num__ ) ;,facade contains behavior,success,sub,1,5,2,4,4,1,0,2
ensure moving task between two stacks updates resumed activity,r . set state ( resumed @$ __str__ ) ; assert equals ( r @$ m stack . get resumed activity ( ) ) ; final activity stack dest stack = m root activity container . get default display ( ) . create stack ( windowing_mode_fullscreen @$ activity_type_standard @$ true ) ;,updates resumed activity,success,sub,2,5,2,4,4,1,0,2
compile internal will automatically reset the perf logger,if ( ! already compiled ) { compile internal ( command @$ true ) ; } else { driver context . get plan ( ) . set query start time ( driver context . get query display ( ) . get query start time ( ) ) ; },internal reset logger,success,sub,4,1,2,4,4,1,0,2
second insert will violate the primary key constraint,volt queuesql ( insertp1 @$ __num__ @$ __num__ ) ; volt executesql ( ) ;,insert violate constraint,success,sub,1,5,2,4,4,1,0,2
close server 2 and pause so server has a chance to close,close server ( server2 ) ; wait . pause ( __num__ * __num__ ) ; wait for cqs disconnected ( client @$ __str__ @$ __num__ ) ;,server has chance,success,sub,4,5,2,3,4,4,3,0
verify that file system does not support unix attributes,try { cfg . file system . read attributes ( path @$ __str__ ) ; throw e ; } catch ( unsupported operation exception unsupported ) { } catch ( io exception ioe ) { throw new runtime exception ( ioe ) ; },system support attributes,success,sub,3,3,2,3,4,4,3,0
this panel wraps the results panel and guarantees the scrolling behaviour,j panel wrapper = new j panel ( new border layout ( ) ) ; wrapper . set background ( color scheme . dark_gray_color ) ; wrapper . add ( search items panel @$ border layout . north ) ;,panel wraps panel,success,sub,3,3,2,3,4,4,3,0
assume root always has a parent,if ( is root ( path ) ) { return true ; } string parent key = get parent path ( path ) ; return parent key != null && is directory ( parent key ) ;,root has parent,success,sub,4,5,2,3,4,4,3,0
does the class have optimization info ?,if ( class optimization info . get class optimization info ( library class ) != null ) { class visitor . visit library class ( library class ) ; },class have info,success,sub,3,5,2,2,2,0,5,0
this is only available after the backend initialized the serializer,type serializer < string > value serializer = kv id . get serializer ( ) ;,backend initialized serializer,success,sub,3,4,2,2,2,0,5,0
assert that the table created still has no hcat instrumentation,table table2 = client . get table ( __str__ @$ __str__ ) ; assert . assert true ( table2 . get sd ( ) . get input format ( ) . equals ( h cat constants . hive_rcfile_if_class ) ) ; driver . run ( __str__ ) ;,table has instrumentation,success,sub,3,5,2,2,2,0,5,0
enable table @$ use retain assignment to assign regions .,admin . enable table ( table name ) . join ( ) ; list < h region location > regions2 = async meta table accessor . get tableh region locations ( meta table @$ table name ) . get ( ) ;,use retain assignment,success,sub,3,4,2,2,2,0,5,0
remove the filter popup if the user has cleared all text,if ( showing && length == __num__ ) { dismiss popup ( ) ; m filtered = false ; },user cleared text,success,sub,4,4,2,2,0,1,4,1
confirm that peer with state a will reject replication request .,verify replication request rejection ( util1 @$ true ) ; verify replication request rejection ( util2 @$ false ) ; util1 . get admin ( ) . disable replication peer ( peer_id ) ; write ( util1 @$ __num__ @$ __num__ ) ; thread . sleep ( __num__ ) ;,peer reject request,success,sub,2,4,2,2,0,1,4,1
window do fn operator does not use a do fn,this . requires stable input = do fn != null && do fn signatures . get signature ( do fn . get class ( ) ) . process element ( ) . requires stable input ( ) ;,a do fn,success,sub,1,2,2,2,0,1,4,1
receiver decrypts the message using the sender 's public key,byte [ ] decrypt bytes = receiver . decrypt data ( encrypted challenge ) ;,receiver decrypts message,success,sub,5,5,2,2,0,1,4,1
run the k means driver,path answer = new path ( output @$ __str__ ) ; k means driver . run ( conf @$ data @$ initialclusters @$ answer @$ convergence delta @$ max iterations @$ true @$ __num__ @$ false ) ;,k means driver,success,sub,4,5,2,2,1,0,0,2
check that the starting event occurs before the started event,assert true ( listener . starting time <= listener . started time @$ __str__ ) ;,the started event,success,sub,4,4,2,2,1,0,0,2
if the user sets a message id @$ use it .,final string message id = one way feature . get message id ( ) ; if ( ! is message id added && message id != null ) { headers . add ( new string header ( av . messageid tag @$ message id ) ) ; },user sets id,success,sub,4,4,2,2,1,0,0,2
the user scheduler captures context,assert true ( results . is context initialized observe on . get ( ) ) ;,scheduler captures context,success,sub,3,2,2,2,1,0,0,2
old pur stored elements with no nr when not specified,if ( nr == __num__ && node . has property ( code ) ) { return node . get property ( code ) . get long ( ) ; } else { return __num__ ; },pur stored elements,success,sub,1,2,1,1,0,0,0,2
let 's actually create cache on non affinity server .,srv3 . cache ( query utils . create table cache name ( query utils . dflt_schema @$ __str__ ) ) ;,let create cache,success,sub,4,3,1,1,0,0,0,2
we bypass the standard equals method that resolve the hostname,assert that ( slave . get channel ( ) . call ( new url builder callable ( __str__ ) ) @$ not ( equal to ( slave . get channel ( ) . call ( new url builder callable ( __str__ ) ) ) ) ) ;,standard equals method,success,sub,2,4,1,1,0,0,0,2
check that method under test throws npe,try { epki . get key spec ( ( key ) null @$ __str__ ) ; fail ( get name ( ) + __str__ ) ; } catch ( null pointer exception ok ) { },method throws npe,success,sub,4,3,1,1,0,0,0,2
if the color has population @$ increase the distinct color count,if ( hist [ color ] > __num__ ) { distinct color count ++ ; },color has population,success,sub,4,5,2,0,0,0,1,1
run the buck kill command,buck kill command handler handler = new buck kill command handler ( project @$ buck command . kill ) ; buck build manager . get instance ( project ) . run buck command while connected to buck ( handler @$ action_title @$ buck module ) ;,buck kill command,success,sub,3,5,2,0,0,0,1,1
end if : got four characters,if ( i == __num__ ) { return - __num__ ; } else { throw new java . io . io exception ( __str__ ) ; },end got characters,success,sub,2,1,2,0,0,0,1,1
asynchronous release the queue @$ but still is single thread,if ( _buffer . get cursor ( ) > _consumer . get ( ) ) consume batch when available ( handler ) ;,asynchronous release queue,success,sub,4,5,2,0,0,0,1,1
ensure wrapper view child has a header,wrapper view wrapper view child = ( wrapper view ) child ; if ( ! wrapper view child . has header ( ) ) { continue ; },child has header,success,sub,2,4,2,0,0,1,0,1
verify that file system does not support unix attributes,try { cfg . file system . read attributes ( path @$ __str__ ) ; throw e ; } catch ( unsupported operation exception unsupported ) { } catch ( io exception ioe ) { throw new runtime exception ( ioe ) ; },system support attributes,success,sub,2,4,2,0,0,1,0,1
recursively collect methods for all superinterfaces .,for ( class doc superintf : intf . interfaces ( ) ) { if ( ! collect remote methods ( superintf @$ table ) ) { errors = true ; } } return ! errors ;,recursively collect methods,success,sub,2,2,2,0,0,1,0,1
generate the map join operator,return map join processor . convertsmb join to map join ( physical context . get conf ( ) @$ newsmb join op @$ map join pos @$ true ) ;,map join operator,success,sub,3,3,2,0,0,1,0,1
make sure eviction thread has entered run method,while ( ! eviction thread . is entering run ( ) ) { thread . sleep ( __num__ ) ; },thread entered method,success,sub,4,4,2,3,3,1,0,2
ruby client should set the path unescaped in the api file,assert true ( file utils . read file to string ( file @$ standard charsets . utf_8 ) . contains ( __str__ ) ) ;,client set path,success,sub,2,5,2,3,3,1,0,2
read default write object indicator,boolean called default write object = read boolean ( ) ; read object state . begin unmarshal custom value ( this @$ called default write object @$ ( current class desc . read object method != null ) ) ; if ( current class desc . has read object ( ) ) set state ( in_read_object_remote_not_custom_marshaled ) ;,default write indicator,success,sub,2,4,2,3,3,1,0,2
it 's an array field type @$ lets check the inner type,inner field type . check compatibility ( ( ( array field type ) other ) . inner field type @$ conflicts @$ strict ) ;,type lets check,success,sub,4,4,2,3,3,1,0,2
0 : incorrect stats since hbm.xml ca n't enable natural id caching,assert equals ( __num__ @$ session factory ( ) . get statistics ( ) . get natural id query execution count ( ) ) ;,stats enable caching,success,sub,3,1,2,3,3,1,0,2
ghost components will have a null logger,if ( existing node . get logger ( ) != null ) { existing node . get logger ( ) . debug ( __str__ @$ new object [ ] { id @$ new type @$ bundle coordinate } ) ; } final extension manager extension manager = flow controller . get extension manager ( ) ;,components have logger,success,sub,2,4,2,3,3,1,0,2
response impl will make the headers unmodifiable,final map < string @$ string > modifiable headers = new tree map < string @$ string > ( string . case_insensitive_order ) ; modifiable headers . put all ( raw response . get headers ( ) ) ;,impl make unmodifiable,success,sub,2,2,2,3,3,1,0,2
enum class needed imports for jackson 's json creator,if ( additional properties . contains key ( serialization_library_jackson ) ) { model . imports . add ( __str__ ) ; model . imports . add ( __str__ ) ; },class needed imports,success,sub,4,4,2,3,3,1,0,2
noinspection object allocation in loop,bucket = new osb tree bucketv1 < > ( cache entry ) ; if ( item index == osb tree bucketv1 . max_page_size_bytes + __num__ ) { item index = bucket . size ( ) - __num__ ; },noinspection object allocation,success,sub,3,3,2,2,3,1,0,1
table should not contain any footers at initialization,assert null ( table . get column footer ( __str__ ) ) ; assert null ( table . get column footer ( __str__ ) ) ; assert null ( table . get column footer ( __str__ ) ) ;,table contain footers,success,sub,4,5,2,2,3,1,0,1
the used resource should still 4 gb and negative available resource,wait memory ( scheduler @$ nm id @$ __num__ * gb @$ - __num__ * gb @$ __num__ @$ __num__ * __num__ ) ;,resource and resource,success,sub,2,2,2,2,3,1,0,1
handler does n't set a result on profile,assert false ( response . to string ( ) @$ response . has defined ( result ) ) ;,handler set result,success,sub,4,3,2,2,3,1,0,1
get jpa managed entity through the repository,message message = message repository . find one ( __num__ ) ; assert not null ( message ) ; assert equals ( __str__ @$ message . get text ( ) ) ;,jpa managed entity,success,sub,4,4,2,2,0,1,0,2
the new calc collation must match the original sort collation,result = calc . copy ( calc . get trait set ( ) . replace ( orig sort collation ) @$ index scan @$ calc . get program ( ) @$ calc . get split count ( ) ) ;,collation match collation,success,sub,3,5,2,2,0,1,0,2
sigar uses jni and does not work in local mode,if ( ! nimbus client . is local override ( ) ) { worker metrics . put ( __str__ @$ __str__ ) ; },sigar uses jni,success,sub,2,2,2,2,0,1,0,2
check choose server alias for rsa keys .,results rsa = km . choose server alias ( __str__ @$ null @$ null ) ; if ( results rsa == null ) { throw new exception ( __str__ ) ; } system . out . println ( __str__ ) ;,check choose alias,success,sub,4,4,2,2,0,1,0,2
new root should have only 1 key,root . go to ( read cursor ) ; assert equals ( __num__ @$ key count ( ) ) ;,root have key,success,sub,2,3,2,2,3,1,4,2
a camera preview frame comes . request a frame .,byte [ ] picture = new byte [ length ] ; frame frame = manager . get frame ( picture @$ __num__ @$ __num__ ) ;,camera request frame,success,sub,3,5,2,2,3,1,4,2
retry with the old formatter which uses synchronization locks,try { parsed = generic formatter . short_day_formatter . parse ( date str @$ __num__ ) . get time ( ) ; } catch ( final parse exception pe ) { parsed = new date ( ) ; },which uses locks,success,sub,5,5,2,2,3,1,4,2
fetch the auto complete text view and set an adapter,auto complete text view actv = find view by id ( r . id . widgets_autocompletetextview ) ; actv . set adapter ( new array adapter < > ( this @$ android . r . layout . simple_dropdown_item_1line @$ cheeses . s cheese strings ) ) ;,auto complete view,success,sub,4,4,2,2,3,1,4,2
do null byte buffer test case,if ( ! null byte buffer test ( the mac ) ) { system . out . println ( __str__ ) ; return false ; } return true ;,byte buffer case,success,sub,4,5,2,1,1,1,0,1
second elector joins election @$ becomes standby .,electors [ __num__ ] . join election ( app datas [ __num__ ] ) ; mockito . verify ( cbs [ __num__ ] @$ mockito . timeout ( __num__ ) ) . become standby ( ) ; check fatals and reset ( ) ;,elector joins election,success,sub,4,5,2,1,1,1,0,1
an interface will get the reloadable static state manager instance,assert equals ( __str__ @$ to string field ( itype . bytes loaded @$ __str__ ) ) ;,interface get instance,success,sub,2,2,2,1,1,1,0,1
second call must not log another message,assert that ( under test . is operational ( ) ) . is false ( ) ; assert that ( memory appender . events ) . extracting ( i logging event :: get level @$ i logging event :: get message ) . contains only once ( tuple ( level . info @$ __str__ ) ) ;,call log message,success,sub,4,5,2,1,1,1,0,1
any activity on the power button stops the accessibility shortcut,cancel pending accessibility shortcut action ( ) ; result &= ~ action_pass_to_user ; is wake key = false ;,activity stops shortcut,success,sub,4,4,1,2,0,3,0,1
1 : no stats since hbm.xml ca n't enable natural id caching,assert equals ( __num__ @$ session factory ( ) . get statistics ( ) . get natural id cache put count ( ) ) ;,stats enable caching,success,sub,3,4,1,2,0,3,0,1
remove timestamp should also be clearing the last modified timestamp,m exif . remove timestamp ( ) ; assert that ( m exif . get last modified timestamp ( ) ) . is equal to ( exif . invalid_timestamp ) ;,timestamp clearing timestamp,success,sub,4,4,1,2,0,3,0,1
the one join column for this specialized class .,long column vector join col vector = ( long column vector ) batch . cols [ single join column ] ; long [ ] vector = join col vector . vector ;,one join column,success,sub,3,2,1,2,0,3,0,1
this loop may throw an io exception,while ( true ) { int bytes read = as . read ( loaded audio @$ loaded audio byte length @$ int len - loaded audio byte length ) ; if ( bytes read <= __num__ ) { as . close ( ) ; break ; } loaded audio byte length += bytes read ; },loop throw exception,success,sub,4,4,2,1,2,2,0,1
to avoid rejected execution exception in basic directory model wait a second,try { thread . sleep ( __num__ ) ; } catch ( interrupted exception e ) { throw new runtime exception ( e ) ; },exception wait second,success,sub,4,4,2,1,2,2,0,1
synchronize so default value does n't override other default value,synchronized ( session ) { object result = session . get attribute ( name ) ; if ( result == null && default value != null ) { session . set attribute ( name @$ default value ) ; result = default value ; } return result ; },value override value,success,sub,4,5,2,1,2,2,0,1
top horizontal non croppped part,height = this . crop zone rect . y - this . image rect . y ; if ( height > __num__ ) { g . fill rect ( this . crop zone rect . x @$ this . image rect . y @$ this . crop zone rect . width @$ height ) ; },non croppped part,success,sub,4,3,2,1,2,2,0,1
method name can not use reserved keyword @$ e.g . return,if ( is reserved word ( operation id ) ) { logger . warn ( operation id + __str__ + camelize ( sanitize name ( __str__ + operation id ) @$ true ) ) ; operation id = __str__ + operation id ; } return camelize ( sanitize name ( operation id ) @$ true ) ;,name use keyword,success,sub,3,5,2,3,3,2,0,2
this method always throws activation exception,user service . activate user ( __str__ ) . to blocking ( ) . single ( ) ;,method throws exception,success,sub,4,5,2,3,3,2,0,2
user 6 has other global permission,user dto user6 = db . users ( ) . insert user ( with email ( __str__ ) ) ; db . users ( ) . insert permission on user ( organization1 @$ user6 @$ administer_quality_profiles ) ;,user has permission,success,sub,3,5,2,3,3,2,0,2
constructing an a should trigger an injection,injector . get instance ( a . class ) ; assert equals ( __num__ @$ injections . get and set ( __num__ ) ) ;,a trigger injection,success,sub,3,4,2,3,3,2,0,2
now reptable has 2000 rows and parttable has 252 rows,save tables with path ( client @$ testnonce + __str__ @$ snapshots path ) ; client . close ( ) ;,reptable has rows,success,sub,1,1,2,1,1,0,4,0
merge input fields : data fields override header fields,if ( fields from header != null ) { if ( ! ( fields from header instanceof point builder ) ) { throw new illegal state exception ( __str__ + fields from header ) ; } fields from data . merge with header ( ( point builder ) fields from header ) ; },fields override fields,success,sub,4,5,2,1,1,0,4,0
this version gives a task that rest li runs,request < string > req = builders . < string > action ( __str__ ) . build ( ) ; get client ( ) . send request ( req ) . get response ( ) ;,version gives task,success,sub,4,3,2,1,1,0,4,0
no intersection between clip area and segment computed corner : bottom left,clippable . init ( ) ; segment clipper . clip ( - __num__ @$ - __num__ @$ __num__ @$ __num__ ) ; assert . assert equals ( __num__ @$ points . size ( ) ) ;,intersection computed corner,success,sub,4,5,2,1,1,0,4,0
completing the task will end the process instance,task service . complete ( task . get id ( ) ) ; assert process ended ( proc id ) ;,task end instance,success,sub,1,4,2,1,0,2,0,1
given : thread which awaited segment .,segment aware aware = new segment aware ( __num__ @$ false ) ; aware . check can read archive or reserve work segment ( __num__ ) ; try { aware . release work segment ( __num__ ) ; } catch ( assertion error e ) { return ; } fail ( __str__ ) ;,which awaited segment,success,sub,4,4,2,1,0,2,0,1
"param ""types will not include 'this '",std type list param types = desc . get parameter types ( ) ; int sz param types = param types . size ( ) ;,"types include ""this""",success,sub,1,1,2,1,0,2,0,1
any request to open gets a new bogus channel,mockito . when ( mock gcs util . open ( mockito . any ( gcs path . class ) ) ) . then ( invocation -> file channel . open ( files . create temp file ( __str__ @$ __str__ ) @$ standard open option . create @$ standard open option . delete_on_close ) ) ;,request gets channel,success,sub,2,5,2,1,0,2,0,1
while statement always has a complexity of at least 1,bool comp while ++ ; entry stack . peek ( ) . bump decision points ( bool comp while ) ; super . visit ( node @$ data ) ; logger . exiting ( class_name @$ __str__ ) ; return data ;,statement has complexity,success,sub,1,5,2,0,0,1,0,1
clients expected initial result .,int [ ] results cnt = new int [ ] { __num__ @$ __num__ @$ __num__ } ;,clients expected result,success,sub,5,5,2,0,0,1,0,1
sets payload to empty as frame contains no data,frame builder . payload ( new byte [ ] { } ) ; curr bytes . reset ( ) ; curr state = beats state . complete ; window size = frame builder . data size ; break ;,frame contains data,success,sub,5,5,2,0,0,1,0,1
classify 1 has entity a as an allowed type,assert true ( classify type1 . can apply to entity type ( entity typea ) ) ;,1 has entity,success,sub,1,1,2,0,0,1,0,1
no key id specified @$ return no matches,if ( sought keyid == null ) { return mono . just ( collections . empty list ( ) ) ; },id return matches,success,sub,4,5,2,1,0,2,5,1
let linger run its course .,callback . assert no callback ( ) ; final int linger timeout ms = m service . m linger delay ms + m service . m linger delay ms / __num__ ; callback . expect callback ( callback entry . lost @$ m cell network agent @$ linger timeout ms ) ;,linger run course,success,sub,4,5,2,1,0,2,5,1
fall back to default value suppose column label contains table name,if ( column label . contains ( __str__ ) ) { table name = string utils . substring before last ( column label @$ __str__ ) ; },label contains name,success,sub,4,5,2,1,0,2,5,1
to start @$ offer a box which contains all of the colors,pq . offer ( new vbox ( __num__ @$ m colors . length - __num__ ) ) ;,which contains all,success,sub,5,5,2,1,0,2,5,1
health check satisfies probe config health conditions,probe result consumer . accept ( new probe result ( probe factory . get workspace id ( ) @$ probe factory . get machine name ( ) @$ probe factory . get server name ( ) @$ probe status . passed ) ) ;,check satisfies probe,success,sub,4,5,1,3,3,3,0,1
mark known lc makes string 1 longer,int sb len = ( knownlc words != null ) ? len + __num__ : len ;,lc makes string,success,sub,2,5,1,3,3,3,0,1
a volt db extension to avoid using exceptions for flow control .,if ( ! is option ) { if ( ! prefer to throw ) { return unexpected token ( ) ; } throw unexpected token ( ) ; },volt db extension,success,sub,3,2,1,3,3,3,0,1
test missing proxy class class not found exception,oin = new proxy blind input stream ( new byte array input stream ( bout . to byte array ( ) ) ) ; try { oin . read object ( ) ; throw new error ( ) ; } catch ( class not found exception ex ) { },class found exception,success,sub,4,5,1,3,3,3,0,1
for now the call bellow will return type unknown,type = compiler . resolve type ref ( model @$ bkm @$ bkm @$ null ) ;,bellow return unknown,success,sub,2,2,1,2,3,0,0,2
client should have noticed the error,assert that ( __str__ @$ client socket . error latch . await ( __num__ @$ seconds ) @$ is ( true ) ) ; assert that ( __str__ @$ client socket . error . get ( ) @$ instance of ( message too large exception . class ) ) ;,client noticed error,success,sub,3,4,1,2,3,0,0,2
user has specified initial context factory ; try to get it,if ( my props != null && my props . get ( context . initial_context_factory ) != null ) { get default init ctx ( ) ; },user specified factory,success,sub,4,4,1,2,3,0,0,2
another producer has moved the sequence failed to increment,so element ( buffer @$ calc element offset ( p index @$ mask ) @$ e ) ; so sequence ( s buffer @$ seq offset @$ p index + __num__ ) ; return true ;,producer moved sequence,success,sub,4,4,1,2,3,0,0,2
the expiration thread is just finishing.. so dont do anything..,log . debug ( __str__ @$ e ) ; thread . current thread ( ) . interrupt ( ) ; throw new runtime exception ( __str__ @$ e ) ;,dont do anything..,success,sub,2,5,2,1,0,1,4,1
component 4 is try block map pointer or displacement .,return eh data type utilities . get component address ( get data type ( ) @$ try_block_map_ordinal @$ get mem buffer ( ) ) ;,component try pointer,success,sub,3,5,2,1,0,1,4,1
authorization header must have a payload,if ( auth header base64 string == null || auth header base64 string . is empty ( ) ) { throw new http authentication exception ( __str__ + __str__ ) ; } return auth header base64 string ;,header have payload,success,sub,4,5,2,1,0,1,4,1
training causes all models to observe data,for ( vector . element e : weights . non zeroes ( ) ) { int index = e . index ( ) ; classifier . train ( index @$ vector @$ weights . get ( index ) ) ; },training causes models,success,sub,3,4,2,1,0,1,4,1
and should have one active activity,list < string > active activity ids = runtime service . get active activity ids ( execution . get id ( ) ) ; assert equals ( __num__ @$ active activity ids . size ( ) ) ;,and have activity,success,sub,4,3,2,2,0,2,0,2
user already specified schema values,if ( vendor extensions . contains key ( codegen_vendor_extension_key ) ) { logger . info ( __str__ + base name + __str__ ) ; return ; },user specified values,success,sub,1,1,2,2,0,2,0,2
vpn is using cell | wi fi .,m service . set underlying networks for vpn ( new network [ ] { m cell network agent . get network ( ) @$ m wi fi network agent . get network ( ) } ) ; wait for idle ( ) ;,vpn using fi,success,sub,3,4,2,2,0,2,0,2
does unaltered block still match ref block ?,bos . reset ( ) ; bs ref . serialize ( b ref @$ bos ) ; ser deser ( bs @$ b1 @$ bos . to byte array ( ) @$ null @$ null ) ;,block match block,success,sub,3,4,2,2,0,2,0,2
add num null values null values .,if ( i <= num null values ) { pf . pkid = null ; pf . status = __str__ + i ; } r1 . put ( i + __str__ @$ pf ) ;,null values values,success,sub,2,4,1,2,0,3,0,1
represents separator @$ which has no temporal field,verify pattern parsing ( __str__ @$ new array list < > ( list . of ( null @$ chrono field . year @$ null @$ chrono field . month_of_year @$ null @$ chrono field . day_of_month @$ null ) ) ) ;,which has field,success,sub,3,3,1,2,0,3,0,1
mock server to allow dynamically generated certificates to be accepted,httpsurl connection . set defaultssl socket factory ( new key store factory ( new mock server logger ( ) ) . ssl context ( ) . get socket factory ( ) ) ; mock server = client and server . start client and server ( port factory . find free port ( ) ) ;,server generated certificates,success,sub,3,3,1,2,0,3,0,1
locked cleanup may generate notifications we can send unlocked,if ( ! is held by current thread ( ) ) { map . process pending notifications ( ) ; },cleanup generate notifications,success,sub,1,5,1,2,0,3,0,1
null constraint has no data,if ( constraint data != null ) { number flag = ( number ) constraint data . get field value ( __str__ ) ; if ( flag != null ) { this . flag = flag . int value ( ) ; } },constraint has data,success,sub,4,4,2,2,3,3,0,1
following should throw null pointer exception .,select results sr = ( select results ) q . execute ( ) ; assert true ( __str__ @$ ( ( range index test hook ) hook ) . is hooked ( __num__ ) ) ; range index . set test hook ( null ) ;,following throw exception,success,sub,1,1,2,2,3,3,0,1
user can see these projects,index for user ( user1 @$ new doc ( ) . set languages ( singleton list ( __str__ ) ) @$ new doc ( ) . set languages ( as list ( __str__ @$ __str__ ) ) ) ;,user see projects,success,sub,4,5,2,2,3,3,0,1
let super do its job first,super . setup view interceptors ( view ) ; add view serialization interceptor ( view ) ;,super do job,success,sub,4,5,2,2,3,3,0,1
assert that the correct dir does not contain the violation .,assert true ( compare pairs . stream ( ) . none match ( p -> p . get path ( ) . equals ( cwd ) ) ) ;,dir contain violation,success,sub,2,5,2,1,0,3,1,1
disable ssl hostname verifier .,httpsurl connection . set default hostname verifier ( new hostname verifier ( ) { @ override public boolean verify ( string s @$ ssl session ssl ses ) { return true ; } } ) ; super . before test ( ) ;,ssl hostname verifier,success,sub,3,5,2,1,0,3,1,1
concurrent hash map does not need synch . here,for ( abstract thread group thread group : groups ) { thread group . wait threads stopped ( ) ; },map need synch,success,sub,1,5,2,1,0,3,1,1
clear to let gc do its work,int new size = size - ( to index - from index ) ; for ( int i = new size ; i < size ; i ++ ) { element data [ i ] = null ; } size = new size ;,gc do work,success,sub,2,5,2,1,0,3,1,1
unknown slot which basically means the exists predicate,if ( ! ( predicates . length == __num__ && predicates [ __num__ ] instanceof exists predicate ) ) { throw new illegal state exception ( __str__ + arrays . to string ( predicates ) ) ; } return true ;,which means predicate,success,sub,3,2,2,0,0,1,0,1
collect all metadata @$ newer values override older values,if ( is newer ( res @$ val ) ) { meta = merge meta ( val . get meta data ( ) @$ meta ) ; res . set ( val ) ; } else { meta = merge meta ( meta @$ val . get meta data ( ) ) ; },values override values,success,sub,2,2,2,0,0,1,0,1
resetting max length should not remove maxlength attribute,tf . add focus listener ( event -> { tf . set max length ( __num__ ) ; } ) ;,length remove attribute,success,sub,2,2,2,0,0,1,0,1
restarted rm has the failed app info too .,rm2 . wait for state ( app1 . get application id ( ) @$ rm app state . failed ) ;,rm has info,success,sub,3,2,2,0,0,1,0,1
check if ping vm does not encounter any errors,if ( process . exit value ( ) == __num__ ) { shell_result = parse ( process ) ; } else { shell_result = su_busyboox_ping ( params [ __num__ ] . address ) ; },vm encounter errors,fail,sub,4,3,2,4,4,4,5,2
make sure pattern can handle colon,if ( replaced value . contains ( __str__ ) ) { try { file tmp = file . create temp file ( __str__ @$ __str__ ) ; tmp . delete ( ) ; } catch ( io exception e ) { throw new invalid builds dir ( new builds dir value + __str__ ) ; } },pattern handle colon,fail,sub,5,5,2,4,4,4,5,2
trigger check to see if parent monitor has changed @$ recalculate layouts,resize timer = new timer ( ) { @ override public void run ( ) { perform size check ( ) ; resize timer . schedule ( monitor_parent_timer_interval ) ; } } ;,monitor changed layouts,fail,sub,4,4,2,4,4,1,0,2
default options should show system decors,assert true ( m target . should show system decors locked ( m primary display ) ) ;,options show decors,fail,sub,3,3,2,4,4,1,0,2
children like forall not node might override this propagation,insert child left tuple ( sink @$ trg left tuples @$ left tuple @$ right tuple . get propagation context ( ) @$ true ) ;,children override propagation,fail,sub,2,2,2,3,4,4,3,0
the process does not cross a subpackage boundary .,if ( containing pkg . equals ( label . get package identifier ( ) ) ) { return false ; },process cross boundary,fail,sub,4,4,2,3,4,4,3,0
to prevent concurrent checks see bug 41646,synchronized ( this . overflow map ) { overflow oplog oplog = get child ( ( int ) oplog id ) ; if ( oplog != null ) { oplog . remove ( dr @$ entry ) ; } },checks see bug,fail,sub,2,4,2,2,2,0,5,0
construct container tokens increase request @$,list < token > increase tokens = new array list < > ( ) ;,tokens increase request,fail,sub,4,5,2,2,2,0,5,0
second kv forces the output to be materialized,p assert . that ( result ) . contains in any order ( kv . of ( __str__ @$ immutable list . of ( __num__ @$ __num__ @$ __num__ ) ) @$ kv . of ( __str__ @$ immutable list . of ( __num__ ) ) ) ;,kv forces output,fail,sub,3,3,2,2,0,1,4,1
if this next lambda runs a clinit @$ it fails,lambda l = dummy method to make check style happy ( static fail if clinit runs :: static method ) ; try { l . run ( __num__ @$ __num__ ) ; fail ( __str__ ) ; } catch ( assertion error ae ) { },lambda runs clinit,fail,sub,5,5,2,2,0,1,4,1
the pattern zygote did n't match . try the secondary .,if ( m zygote secondary socket address != null ) { attempt connection to secondary zygote ( ) ; if ( secondary zygote state . matches ( abi ) ) { return secondary zygote state ; } },pattern try secondary,fail,sub,3,3,2,2,1,0,0,2
variable has constant value @$ return a literal .,if ( var . get constant value ( ) != null ) { return tree util . new literal ( var . get constant value ( ) @$ type util ) ; },variable return literal,fail,sub,3,5,2,2,1,0,0,2
indicate the the server supports muc,join presence . add extension ( new muc initial presence ( password @$ max chars @$ max stanzas @$ seconds @$ since ) ) ;,server supports muc,fail,sub,3,4,1,1,0,0,0,2
thread a 2 gets pool a with thread a 2,if ( threada1 . in event loop ( ) ) { await ( arrival barrier ) ; return poola1 ; } else if ( threada2 . in event loop ( ) ) { await ( arrival barrier ) ; await ( release barrier ) ; return poola2 ; },2 gets pool,fail,sub,4,2,1,1,0,0,0,2
one shortcut when b node 3,add shortcut ( nodea @$ nodeb @$ e3toa . get edge ( ) @$ e3tob . get edge ( ) @$ e3toa . get edge ( ) @$ e3tob . get edge ( ) @$ __num__ ) ; set level equal to node id for all nodes ( ) ;,b node 3,fail,sub,2,1,2,0,0,0,1,1
filtering must also remove the lt from the rule network evaluator,if ( match . get rule agenda item ( ) != null ) { if ( left tuple . get memory ( ) != null ) { left tuple . get memory ( ) . remove ( left tuple ) ; } },filtering remove lt,fail,sub,4,5,2,0,0,0,1,1
servers must not receive data sent by server after reset .,assert false ( stream1 data latch . await ( __num__ @$ time unit . seconds ) ) ;,servers receive data,fail,sub,4,2,2,0,0,1,0,1
p 12 key currently does not support separate store and entry passwords,if ( p12keystore . equals ignore case ( ks . get type ( ) ) ) { throw une2 ; } else { pkey = get key passwd ( alias @$ null @$ null ) ; pp = new password protection ( pkey ) ; entry = ks . get entry ( alias @$ pp ) ; },key support store,fail,sub,3,3,2,0,0,1,0,1
let explicit command options override the environment .,m_port = ports . next client ( ) ; m_admin port = ports . next admin ( ) ; m_internal port = ports . next ( ) ; m_zk interface = __str__ + ports . next ( ) ;,options override environment,fail,sub,3,3,2,3,3,1,0,2
if reference does n't contain the target address,if ( ! reference . is memory reference ( ) ) { continue ; } if ( ! memory . contains ( target ) ) { continue ; } if ( ignore new pointers . contains ( target ) ) { continue ; },reference contain address,fail,sub,3,4,2,3,3,1,0,2
wait @$ the ui no longer has access to the display .,if ( ! m window manager internal . is uid allowed on display ( cs . self reported display id @$ cs . uid ) ) { return input bind result . invalid_display_id ; },ui has access,fail,sub,2,5,2,3,3,1,0,2
finally @$ the consumer which provides formatted log output,log . info ( string . format ( __str__ @$ kw . get key ( ) . get key ( ) @$ kw . get value ( ) ) ) ;,which provides output,fail,sub,4,1,2,3,3,1,0,2
lower android es have a reference table with 1024 entries only,for ( int i = __num__ ; i < __num__ ; i ++ ) { assert true ( jni test . create and delete int array ( ) ) ; system . out . print ( i ) ; },es have table,fail,sub,2,2,2,2,3,1,0,1
'not found ' can happen if client creates more than one subnetwork,throw new runtime exception ( __str__ + __str__ + from + __str__ + to + __str__ + req @$ ex ) ;,client creates subnetwork,fail,sub,3,3,2,2,3,1,0,1
new cell has one less element,int new row location = get celly ( __num__ ) ; assert close to ( __str__ @$ new row location @$ row location ) ;,cell has element,fail,sub,4,5,2,2,0,1,0,2
contact is n't supported @$ mimic resolver behavior .,if ( remote locations . is empty ( ) ) { return null ; },contact mimic behavior,fail,sub,2,2,2,2,0,1,0,2
if parent st sibling @$ return parent,if ( result == null ) { result = node . get parent node ( ) ; return result ; },parent st parent,fail,sub,2,4,2,2,3,1,4,2
avoid some points do not have a size .,if ( size > __num__ ) { point . x = __num__ ; point . y = __num__ ; },points have size,fail,sub,2,5,2,2,3,1,4,2
self ice should adapt its fencing token,assert equals ( new fencing token @$ fenced gateway . get fencing token ( ) ) ; assert equals ( new fencing token @$ fenced testing endpoint . get fencing token ( ) ) ; rpc utils . terminate rpc endpoint ( fenced testing endpoint @$ timeout ) ;,ice adapt token,fail,sub,4,2,2,1,1,1,0,1
vanilla has excessive logging at info level,parquet logger = logger . get logger ( __str__ ) ; parquet logger . set level ( level . warning ) ;,vanilla has excessive,fail,sub,4,2,2,1,1,1,0,1
register an and channel open listener,open listener channel open listener = remoteejb service . get open listener ( ) ; try { registration = endpoint . register service ( ejb_channel_name @$ channel open listener @$ this . channel creation options ) ; } catch ( service registration exception e ) { throw new start exception ( e ) ; },and channel listener,fail,sub,3,4,1,2,0,3,0,1
setup connect timeout from server pool configuration .,for ( ldap server server : servers ) { if ( server . get connect timeout ( ) == __num__ && timeout != __num__ ) { server . set connect timeout ( timeout ) ; } } return this ;,setup connect timeout,fail,sub,3,2,1,2,0,3,0,1
paths typically have many watches @$ so use default cap here,if ( paths == null ) { paths = new hash set < > ( ) ; watch2 paths . put ( watcher @$ paths ) ; },paths have watches,fail,sub,3,5,2,1,2,2,0,1
this method does the right thing with a null transaction task queue,if ( ! m_complete msg . is restart ( ) ) { do commonspi complete actions ( ) ; log todr ( site connection . getdr gateway ( ) ) ; } else { m_txn state . set begin undo token ( site . k invalid undo token ) ; },method does thing,fail,sub,1,2,2,1,2,2,0,1
reconnect internet after testing network click triggered rollbacks,get device ( ) . execute shell command ( __str__ ) ; get device ( ) . execute shell command ( __str__ ) ;,click triggered rollbacks,fail,sub,2,2,2,3,3,2,0,2
... but the three credentials that follow credentials include an authorization header,for ( int i = __num__ ; i < __num__ ; i ++ ) { request = server . take request ( ) ; assert equals ( __str__ @$ request . get request line ( ) ) ; assert contains ( request . get headers ( ) @$ __str__ + simple authenticator . base_64_credentials ) ; },credentials include header,fail,sub,3,4,2,3,3,2,0,2
class a class not found exception if not found .,class < ? > cls = class . for name ( ci class ) ;,class found exception,fail,sub,5,3,2,1,1,0,4,0
if set exist : update value,if ( index >= __num__ ) { values . set ( index @$ values . get ( index ) + val ) ; } else { set ( val @$ keys ) ; },set exist value,fail,sub,4,4,2,1,1,0,4,0
set animator will call invalidate self and drive the animation .,int partial alpha = ( int ) ( alpha * normalized ) ; super . set alpha ( partial alpha ) ; super . draw ( canvas ) ; super . set alpha ( alpha ) ;,animator call self,fail,sub,1,5,2,1,0,2,0,1
will not create blob method on the underlying connection,method m = connection . class . get method ( __str__ @$ new class [ ] { } ) ;,not create method,fail,sub,5,3,2,1,0,2,0,1
this string does not return any result .,return integer . parse int ( this . < string > argument ( __num__ ) ) ;,string return result,fail,sub,5,1,2,0,0,1,0,1
we perform the analogous class on the get methods .,subclass . set field ( type @$ subclass @$ boolean field @$ illegal argument exception class @$ value ) ;,class get methods,fail,sub,1,1,2,0,0,1,0,1
audit sql deref for example wo n't extend entity sql deref,if ( ! ( type instanceof java . lang . reflect . parameterized type ) ) { return null ; },deref extend dao,fail,sub,2,1,2,1,0,2,5,1
we only one get and head requests,if ( ! exchange . get request method ( ) . equals ( get ) && ! exchange . get request method ( ) . equals ( head ) ) { return false ; } if ( entry == null ) { this . response cachable = mark cacheable ; return false ; },one get requests,fail,sub,5,1,2,1,0,2,5,1
control get transaction constructor .,set transaction type ( cardio2e transaction types . get ) ; super . set object type ( cardio2e object types . zones_bypass ) ; set object number ( object number ) ;,control get constructor,fail,sub,4,3,1,3,3,3,0,1
all honest errors should detect cheating,boolean thrown = false ; try { run application ( test application ) ; } catch ( exception e ) { assert true ( e . get cause ( ) instanceof malicious exception ) ; thrown = true ; } assert true ( __str__ @$ thrown ) ;,errors detect cheating,fail,sub,2,4,1,3,3,3,0,1
use exists default ssl context to reuse after test .,final ssl context dflt ssl ctx = ssl context . get default ( ) ;,use exists context,fail,sub,3,3,1,2,3,0,0,2
our internal analysis does not have this rule,if ( ! analysis mock . is this bazel ( ) ) { return ; },analysis have rule,fail,sub,3,5,1,2,3,0,0,2
consume mouse enter event if we generate one,if ( id == mouse event . mouse_entered ) { e . consume ( ) ; },mouse enter event,fail,sub,4,5,2,1,0,1,4,1
no overloading should take more than 2 steps .,if ( new style2 != null ) { if ( fallback cache [ new style2 . ordinal ( ) ] != null ) { throw new illegal state exception ( __str__ ) ; } },overloading take steps,fail,sub,3,4,2,1,0,1,4,1
zip name does n't override equals,assert equals ( entry . get name ( ) @$ entries . next element ( ) . get name ( ) ) ;,name override equals,fail,sub,4,5,2,2,0,2,0,2
add all the chains with proper context add first mapper,outputqueue = chain . create blocking queue ( ) ; chain . add mapper ( context @$ outputqueue @$ __num__ ) ;,chains add mapper,fail,sub,4,5,2,2,0,2,0,2
src directory and its subtree can not contain snapshottable directories with snapshots,fs dir snapshot op . check snapshot ( fsd @$ srciip @$ snapshottable dirs ) ;,directory contain directories,fail,sub,4,4,1,2,0,3,0,1
parsing within i fs cause syntax errors on safari .,assert print ( __str__ @$ __str__ ) ; assert print ( __str__ @$ __str__ ) ; assert print ( __str__ @$ __str__ ) ; assert print ( __str__ @$ __str__ ) ;,parsing fs errors,fail,sub,3,4,1,2,0,3,0,1
case 0 times should throw iae,try { parts = bytes . split ( low @$ high @$ __num__ ) ; assert true ( __str__ @$ false ) ; } catch ( illegal argument exception iae ) { },case throw iae,fail,sub,1,1,2,2,3,3,0,1
find all configurations where the map contains any string from hidden set,iterable < map . entry < string @$ string > > matching = iterables . filter ( conf @$ conf entry -> { for ( string name : hidden set ) { if ( conf entry . get key ( ) . starts with ( name ) ) { return true ; } } return false ; } ) ;,map contains string,fail,sub,4,4,2,2,3,3,0,1
most likely client side closed socket,if ( t instanceof socket exception ) { get logger ( ) . info ( __str__ + __str__ ) ; return ; },side closed socket,fail,sub,1,5,2,1,0,3,1,1
and if still not found @$ let s choose default ?,if ( name == null ) { name = _default type id ( cls ) ; },s ' choose default,fail,sub,4,1,2,1,0,3,1,1
next spec does n't correctly handle dt ds,if ( event == xml stream constants . start_document ) { while ( ! stax stream reader . is start element ( ) ) event = stax stream reader . next ( ) ; },spec handle ds,fail,sub,3,3,2,0,0,1,0,1
register the chat window container bar item .,container filter . put ( container . container_id @$ container . container_chat_menu_bar . getid ( ) ) ; bundle context . register service ( plugin component factory . class . get name ( ) @$ new otr plugin component factory ( container . container_chat_menu_bar ) @$ container filter ) ;,container bar item,fail,sub,2,2,2,0,0,1,0,1
note : gwt and wsdl have no rules,return arrays . as list ( __str__ @$ __str__ @$ __str__ @$ __str__ @$ __str__ @$ __str__ @$ __str__ @$ __str__ @$ __str__ @$ __str__ ) ;,gwt have rules,fail,sub,2,3,2,1,0,1,4,2
sys reports time in nanoseconds across all processors .,cpu time /= __num__ * os . get available processors ( ) ; double cpu = __num__ ; if ( prev cpu time > __num__ ) { long cpu time diff = cpu time - prev cpu time ; cpu = math . min ( __num__ @$ ( double ) cpu time diff / metrics_update_freq ) ; },sys reports time,fail,sub,3,3,2,1,0,1,4,2
permission arguments from server response will have the priority for accuracy .,if ( this . permission != null ) { perm arg = this . permission ; },arguments have priority,fail,sub,3,4,2,1,0,1,4,2
bytes 4 occupies last two octets,if ( index > octets . length - __num__ || index > __num__ ) { return false ; },bytes occupies octets,fail,sub,2,5,2,1,0,1,4,2
be aware the legacy command is not signaling truncate events,parser . signal truncate table ( table id @$ ctx ) ; super . enter truncate table ( ctx ) ;,command signaling events,fail,sub,4,5,2,2,0,0,0,1
track the server reported online regions in memory .,synchronized ( rs reports ) { rs reports . put ( server name @$ region names ) ; } if ( region names . is empty ( ) ) { log . trace ( __str__ @$ server name ) ; return ; },server reported regions,fail,sub,4,5,2,2,0,0,0,1
buck tests should allow nonexistent targets without throwing .,buck config test utils . create with default filesystem ( temporary folder @$ reader ) ;,tests allow targets,fail,sub,2,5,2,2,0,0,0,1
now use the context to log messages,when ( delta session manager . get the context ( ) ) . then return ( mock ( context . class ) ) ; when ( delta session manager . get the context ( ) . get logger ( ) ) . then return ( mock ( log . class ) ) ;,now use context,fail,sub,4,4,2,2,0,0,0,1
modern devices always support densities .,application density = display metrics . density_device ; application scale = __num__ ; application inverted scale = __num__ ; final int expandable = __num__ ; final int large_screens = __num__ ; final int xlarge_screens = __num__ ; int size info = __num__ ;,devices support densities,fail,sub,3,5,2,2,0,0,0,1
