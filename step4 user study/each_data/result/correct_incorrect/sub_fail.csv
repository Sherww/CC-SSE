check if ping vm does not encounter any errors,if ( process . exit value ( ) == __num__ ) { shell_result = parse ( process ) ; } else { shell_result = su_busyboox_ping ( params [ __num__ ] . address ) ; },vm encounter errors,fail,sub,4,3,2,4,4,4,5,2
make sure pattern can handle colon,if ( replaced value . contains ( __str__ ) ) { try { file tmp = file . create temp file ( __str__ @$ __str__ ) ; tmp . delete ( ) ; } catch ( io exception e ) { throw new invalid builds dir ( new builds dir value + __str__ ) ; } },pattern handle colon,fail,sub,5,5,2,4,4,4,5,2
trigger check to see if parent monitor has changed @$ recalculate layouts,resize timer = new timer ( ) { @ override public void run ( ) { perform size check ( ) ; resize timer . schedule ( monitor_parent_timer_interval ) ; } } ;,monitor changed layouts,fail,sub,4,4,2,4,4,1,0,2
default options should show system decors,assert true ( m target . should show system decors locked ( m primary display ) ) ;,options show decors,fail,sub,3,3,2,4,4,1,0,2
children like forall not node might override this propagation,insert child left tuple ( sink @$ trg left tuples @$ left tuple @$ right tuple . get propagation context ( ) @$ true ) ;,children override propagation,fail,sub,2,2,2,3,4,4,3,0
the process does not cross a subpackage boundary .,if ( containing pkg . equals ( label . get package identifier ( ) ) ) { return false ; },process cross boundary,fail,sub,4,4,2,3,4,4,3,0
to prevent concurrent checks see bug 41646,synchronized ( this . overflow map ) { overflow oplog oplog = get child ( ( int ) oplog id ) ; if ( oplog != null ) { oplog . remove ( dr @$ entry ) ; } },checks see bug,fail,sub,2,4,2,2,2,0,5,0
construct container tokens increase request @$,list < token > increase tokens = new array list < > ( ) ;,tokens increase request,fail,sub,4,5,2,2,2,0,5,0
second kv forces the output to be materialized,p assert . that ( result ) . contains in any order ( kv . of ( __str__ @$ immutable list . of ( __num__ @$ __num__ @$ __num__ ) ) @$ kv . of ( __str__ @$ immutable list . of ( __num__ ) ) ) ;,kv forces output,fail,sub,3,3,2,2,0,1,4,1
if this next lambda runs a clinit @$ it fails,lambda l = dummy method to make check style happy ( static fail if clinit runs :: static method ) ; try { l . run ( __num__ @$ __num__ ) ; fail ( __str__ ) ; } catch ( assertion error ae ) { },lambda runs clinit,fail,sub,5,5,2,2,0,1,4,1
the pattern zygote did n't match . try the secondary .,if ( m zygote secondary socket address != null ) { attempt connection to secondary zygote ( ) ; if ( secondary zygote state . matches ( abi ) ) { return secondary zygote state ; } },pattern try secondary,fail,sub,3,3,2,2,1,0,0,2
variable has constant value @$ return a literal .,if ( var . get constant value ( ) != null ) { return tree util . new literal ( var . get constant value ( ) @$ type util ) ; },variable return literal,fail,sub,3,5,2,2,1,0,0,2
indicate the the server supports muc,join presence . add extension ( new muc initial presence ( password @$ max chars @$ max stanzas @$ seconds @$ since ) ) ;,server supports muc,fail,sub,3,4,1,1,0,0,0,2
thread a 2 gets pool a with thread a 2,if ( threada1 . in event loop ( ) ) { await ( arrival barrier ) ; return poola1 ; } else if ( threada2 . in event loop ( ) ) { await ( arrival barrier ) ; await ( release barrier ) ; return poola2 ; },2 gets pool,fail,sub,4,2,1,1,0,0,0,2
one shortcut when b node 3,add shortcut ( nodea @$ nodeb @$ e3toa . get edge ( ) @$ e3tob . get edge ( ) @$ e3toa . get edge ( ) @$ e3tob . get edge ( ) @$ __num__ ) ; set level equal to node id for all nodes ( ) ;,b node 3,fail,sub,2,1,2,0,0,0,1,1
filtering must also remove the lt from the rule network evaluator,if ( match . get rule agenda item ( ) != null ) { if ( left tuple . get memory ( ) != null ) { left tuple . get memory ( ) . remove ( left tuple ) ; } },filtering remove lt,fail,sub,4,5,2,0,0,0,1,1
servers must not receive data sent by server after reset .,assert false ( stream1 data latch . await ( __num__ @$ time unit . seconds ) ) ;,servers receive data,fail,sub,4,2,2,0,0,1,0,1
p 12 key currently does not support separate store and entry passwords,if ( p12keystore . equals ignore case ( ks . get type ( ) ) ) { throw une2 ; } else { pkey = get key passwd ( alias @$ null @$ null ) ; pp = new password protection ( pkey ) ; entry = ks . get entry ( alias @$ pp ) ; },key support store,fail,sub,3,3,2,0,0,1,0,1
let explicit command options override the environment .,m_port = ports . next client ( ) ; m_admin port = ports . next admin ( ) ; m_internal port = ports . next ( ) ; m_zk interface = __str__ + ports . next ( ) ;,options override environment,fail,sub,3,3,2,3,3,1,0,2
if reference does n't contain the target address,if ( ! reference . is memory reference ( ) ) { continue ; } if ( ! memory . contains ( target ) ) { continue ; } if ( ignore new pointers . contains ( target ) ) { continue ; },reference contain address,fail,sub,3,4,2,3,3,1,0,2
wait @$ the ui no longer has access to the display .,if ( ! m window manager internal . is uid allowed on display ( cs . self reported display id @$ cs . uid ) ) { return input bind result . invalid_display_id ; },ui has access,fail,sub,2,5,2,3,3,1,0,2
finally @$ the consumer which provides formatted log output,log . info ( string . format ( __str__ @$ kw . get key ( ) . get key ( ) @$ kw . get value ( ) ) ) ;,which provides output,fail,sub,4,1,2,3,3,1,0,2
lower android es have a reference table with 1024 entries only,for ( int i = __num__ ; i < __num__ ; i ++ ) { assert true ( jni test . create and delete int array ( ) ) ; system . out . print ( i ) ; },es have table,fail,sub,2,2,2,2,3,1,0,1
'not found ' can happen if client creates more than one subnetwork,throw new runtime exception ( __str__ + __str__ + from + __str__ + to + __str__ + req @$ ex ) ;,client creates subnetwork,fail,sub,3,3,2,2,3,1,0,1
new cell has one less element,int new row location = get celly ( __num__ ) ; assert close to ( __str__ @$ new row location @$ row location ) ;,cell has element,fail,sub,4,5,2,2,0,1,0,2
contact is n't supported @$ mimic resolver behavior .,if ( remote locations . is empty ( ) ) { return null ; },contact mimic behavior,fail,sub,2,2,2,2,0,1,0,2
if parent st sibling @$ return parent,if ( result == null ) { result = node . get parent node ( ) ; return result ; },parent st parent,fail,sub,2,4,2,2,3,1,4,2
avoid some points do not have a size .,if ( size > __num__ ) { point . x = __num__ ; point . y = __num__ ; },points have size,fail,sub,2,5,2,2,3,1,4,2
self ice should adapt its fencing token,assert equals ( new fencing token @$ fenced gateway . get fencing token ( ) ) ; assert equals ( new fencing token @$ fenced testing endpoint . get fencing token ( ) ) ; rpc utils . terminate rpc endpoint ( fenced testing endpoint @$ timeout ) ;,ice adapt token,fail,sub,4,2,2,1,1,1,0,1
vanilla has excessive logging at info level,parquet logger = logger . get logger ( __str__ ) ; parquet logger . set level ( level . warning ) ;,vanilla has excessive,fail,sub,4,2,2,1,1,1,0,1
register an and channel open listener,open listener channel open listener = remoteejb service . get open listener ( ) ; try { registration = endpoint . register service ( ejb_channel_name @$ channel open listener @$ this . channel creation options ) ; } catch ( service registration exception e ) { throw new start exception ( e ) ; },and channel listener,fail,sub,3,4,1,2,0,3,0,1
setup connect timeout from server pool configuration .,for ( ldap server server : servers ) { if ( server . get connect timeout ( ) == __num__ && timeout != __num__ ) { server . set connect timeout ( timeout ) ; } } return this ;,setup connect timeout,fail,sub,3,2,1,2,0,3,0,1
paths typically have many watches @$ so use default cap here,if ( paths == null ) { paths = new hash set < > ( ) ; watch2 paths . put ( watcher @$ paths ) ; },paths have watches,fail,sub,3,5,2,1,2,2,0,1
this method does the right thing with a null transaction task queue,if ( ! m_complete msg . is restart ( ) ) { do commonspi complete actions ( ) ; log todr ( site connection . getdr gateway ( ) ) ; } else { m_txn state . set begin undo token ( site . k invalid undo token ) ; },method does thing,fail,sub,1,2,2,1,2,2,0,1
reconnect internet after testing network click triggered rollbacks,get device ( ) . execute shell command ( __str__ ) ; get device ( ) . execute shell command ( __str__ ) ;,click triggered rollbacks,fail,sub,2,2,2,3,3,2,0,2
... but the three credentials that follow credentials include an authorization header,for ( int i = __num__ ; i < __num__ ; i ++ ) { request = server . take request ( ) ; assert equals ( __str__ @$ request . get request line ( ) ) ; assert contains ( request . get headers ( ) @$ __str__ + simple authenticator . base_64_credentials ) ; },credentials include header,fail,sub,3,4,2,3,3,2,0,2
class a class not found exception if not found .,class < ? > cls = class . for name ( ci class ) ;,class found exception,fail,sub,5,3,2,1,1,0,4,0
if set exist : update value,if ( index >= __num__ ) { values . set ( index @$ values . get ( index ) + val ) ; } else { set ( val @$ keys ) ; },set exist value,fail,sub,4,4,2,1,1,0,4,0
set animator will call invalidate self and drive the animation .,int partial alpha = ( int ) ( alpha * normalized ) ; super . set alpha ( partial alpha ) ; super . draw ( canvas ) ; super . set alpha ( alpha ) ;,animator call self,fail,sub,1,5,2,1,0,2,0,1
will not create blob method on the underlying connection,method m = connection . class . get method ( __str__ @$ new class [ ] { } ) ;,not create method,fail,sub,5,3,2,1,0,2,0,1
this string does not return any result .,return integer . parse int ( this . < string > argument ( __num__ ) ) ;,string return result,fail,sub,5,1,2,0,0,1,0,1
we perform the analogous class on the get methods .,subclass . set field ( type @$ subclass @$ boolean field @$ illegal argument exception class @$ value ) ;,class get methods,fail,sub,1,1,2,0,0,1,0,1
audit sql deref for example wo n't extend entity sql deref,if ( ! ( type instanceof java . lang . reflect . parameterized type ) ) { return null ; },deref extend dao,fail,sub,2,1,2,1,0,2,5,1
we only one get and head requests,if ( ! exchange . get request method ( ) . equals ( get ) && ! exchange . get request method ( ) . equals ( head ) ) { return false ; } if ( entry == null ) { this . response cachable = mark cacheable ; return false ; },one get requests,fail,sub,5,1,2,1,0,2,5,1
control get transaction constructor .,set transaction type ( cardio2e transaction types . get ) ; super . set object type ( cardio2e object types . zones_bypass ) ; set object number ( object number ) ;,control get constructor,fail,sub,4,3,1,3,3,3,0,1
all honest errors should detect cheating,boolean thrown = false ; try { run application ( test application ) ; } catch ( exception e ) { assert true ( e . get cause ( ) instanceof malicious exception ) ; thrown = true ; } assert true ( __str__ @$ thrown ) ;,errors detect cheating,fail,sub,2,4,1,3,3,3,0,1
use exists default ssl context to reuse after test .,final ssl context dflt ssl ctx = ssl context . get default ( ) ;,use exists context,fail,sub,3,3,1,2,3,0,0,2
our internal analysis does not have this rule,if ( ! analysis mock . is this bazel ( ) ) { return ; },analysis have rule,fail,sub,3,5,1,2,3,0,0,2
consume mouse enter event if we generate one,if ( id == mouse event . mouse_entered ) { e . consume ( ) ; },mouse enter event,fail,sub,4,5,2,1,0,1,4,1
no overloading should take more than 2 steps .,if ( new style2 != null ) { if ( fallback cache [ new style2 . ordinal ( ) ] != null ) { throw new illegal state exception ( __str__ ) ; } },overloading take steps,fail,sub,3,4,2,1,0,1,4,1
zip name does n't override equals,assert equals ( entry . get name ( ) @$ entries . next element ( ) . get name ( ) ) ;,name override equals,fail,sub,4,5,2,2,0,2,0,2
add all the chains with proper context add first mapper,outputqueue = chain . create blocking queue ( ) ; chain . add mapper ( context @$ outputqueue @$ __num__ ) ;,chains add mapper,fail,sub,4,5,2,2,0,2,0,2
src directory and its subtree can not contain snapshottable directories with snapshots,fs dir snapshot op . check snapshot ( fsd @$ srciip @$ snapshottable dirs ) ;,directory contain directories,fail,sub,4,4,1,2,0,3,0,1
parsing within i fs cause syntax errors on safari .,assert print ( __str__ @$ __str__ ) ; assert print ( __str__ @$ __str__ ) ; assert print ( __str__ @$ __str__ ) ; assert print ( __str__ @$ __str__ ) ;,parsing fs errors,fail,sub,3,4,1,2,0,3,0,1
case 0 times should throw iae,try { parts = bytes . split ( low @$ high @$ __num__ ) ; assert true ( __str__ @$ false ) ; } catch ( illegal argument exception iae ) { },case throw iae,fail,sub,1,1,2,2,3,3,0,1
find all configurations where the map contains any string from hidden set,iterable < map . entry < string @$ string > > matching = iterables . filter ( conf @$ conf entry -> { for ( string name : hidden set ) { if ( conf entry . get key ( ) . starts with ( name ) ) { return true ; } } return false ; } ) ;,map contains string,fail,sub,4,4,2,2,3,3,0,1
most likely client side closed socket,if ( t instanceof socket exception ) { get logger ( ) . info ( __str__ + __str__ ) ; return ; },side closed socket,fail,sub,1,5,2,1,0,3,1,1
and if still not found @$ let s choose default ?,if ( name == null ) { name = _default type id ( cls ) ; },s ' choose default,fail,sub,4,1,2,1,0,3,1,1
next spec does n't correctly handle dt ds,if ( event == xml stream constants . start_document ) { while ( ! stax stream reader . is start element ( ) ) event = stax stream reader . next ( ) ; },spec handle ds,fail,sub,3,3,2,0,0,1,0,1
register the chat window container bar item .,container filter . put ( container . container_id @$ container . container_chat_menu_bar . getid ( ) ) ; bundle context . register service ( plugin component factory . class . get name ( ) @$ new otr plugin component factory ( container . container_chat_menu_bar ) @$ container filter ) ;,container bar item,fail,sub,2,2,2,0,0,1,0,1
note : gwt and wsdl have no rules,return arrays . as list ( __str__ @$ __str__ @$ __str__ @$ __str__ @$ __str__ @$ __str__ @$ __str__ @$ __str__ @$ __str__ @$ __str__ ) ;,gwt have rules,fail,sub,2,3,2,1,0,1,4,2
sys reports time in nanoseconds across all processors .,cpu time /= __num__ * os . get available processors ( ) ; double cpu = __num__ ; if ( prev cpu time > __num__ ) { long cpu time diff = cpu time - prev cpu time ; cpu = math . min ( __num__ @$ ( double ) cpu time diff / metrics_update_freq ) ; },sys reports time,fail,sub,3,3,2,1,0,1,4,2
permission arguments from server response will have the priority for accuracy .,if ( this . permission != null ) { perm arg = this . permission ; },arguments have priority,fail,sub,3,4,2,1,0,1,4,2
bytes 4 occupies last two octets,if ( index > octets . length - __num__ || index > __num__ ) { return false ; },bytes occupies octets,fail,sub,2,5,2,1,0,1,4,2
be aware the legacy command is not signaling truncate events,parser . signal truncate table ( table id @$ ctx ) ; super . enter truncate table ( ctx ) ;,command signaling events,fail,sub,4,5,2,2,0,0,0,1
track the server reported online regions in memory .,synchronized ( rs reports ) { rs reports . put ( server name @$ region names ) ; } if ( region names . is empty ( ) ) { log . trace ( __str__ @$ server name ) ; return ; },server reported regions,fail,sub,4,5,2,2,0,0,0,1
buck tests should allow nonexistent targets without throwing .,buck config test utils . create with default filesystem ( temporary folder @$ reader ) ;,tests allow targets,fail,sub,2,5,2,2,0,0,0,1
now use the context to log messages,when ( delta session manager . get the context ( ) ) . then return ( mock ( context . class ) ) ; when ( delta session manager . get the context ( ) . get logger ( ) ) . then return ( mock ( log . class ) ) ;,now use context,fail,sub,4,4,2,2,0,0,0,1
modern devices always support densities .,application density = display metrics . density_device ; application scale = __num__ ; application inverted scale = __num__ ; final int expandable = __num__ ; final int large_screens = __num__ ; final int xlarge_screens = __num__ ; int size info = __num__ ;,devices support densities,fail,sub,3,5,2,2,0,0,0,1
