all surrogate pairs with this lead surrogate have only irrelevant data,if ( ( norm32 & mask ) == __num__ ) { return __num__ ; } else { return get norm32 from surrogate pair ( norm32 @$ args . c ) ; },pairs have data,success,sub,4,4,2,4,4,4,5,2
one of the 2 threads should get an optimistic lock exception,assert equals ( __num__ @$ exceptions . size ( ) ) ; assert true ( exceptions . get ( __num__ ) instanceof activiti optimistic locking exception ) ;,one get exception,success,sub,4,4,2,4,4,4,5,2
the facade only contains the fallback behavior,assert . assert true ( router facade . global policy map . contains key ( def queue key ) && router facade . global policy map . size ( ) == __num__ ) ;,facade contains behavior,success,sub,1,5,2,4,4,1,0,2
ensure moving task between two stacks updates resumed activity,r . set state ( resumed @$ __str__ ) ; assert equals ( r @$ m stack . get resumed activity ( ) ) ; final activity stack dest stack = m root activity container . get default display ( ) . create stack ( windowing_mode_fullscreen @$ activity_type_standard @$ true ) ;,updates resumed activity,success,sub,2,5,2,4,4,1,0,2
second insert will violate the primary key constraint,volt queuesql ( insertp1 @$ __num__ @$ __num__ ) ; volt executesql ( ) ;,insert violate constraint,success,sub,1,5,2,4,4,1,0,2
close server 2 and pause so server has a chance to close,close server ( server2 ) ; wait . pause ( __num__ * __num__ ) ; wait for cqs disconnected ( client @$ __str__ @$ __num__ ) ;,server has chance,success,sub,4,5,2,3,4,4,3,0
this panel wraps the results panel and guarantees the scrolling behaviour,j panel wrapper = new j panel ( new border layout ( ) ) ; wrapper . set background ( color scheme . dark_gray_color ) ; wrapper . add ( search items panel @$ border layout . north ) ;,panel wraps panel,success,sub,3,3,2,3,4,4,3,0
assume root always has a parent,if ( is root ( path ) ) { return true ; } string parent key = get parent path ( path ) ; return parent key != null && is directory ( parent key ) ;,root has parent,success,sub,4,5,2,3,4,4,3,0
this is only available after the backend initialized the serializer,type serializer < string > value serializer = kv id . get serializer ( ) ;,backend initialized serializer,success,sub,3,4,2,2,2,0,5,0
assert that the table created still has no hcat instrumentation,table table2 = client . get table ( __str__ @$ __str__ ) ; assert . assert true ( table2 . get sd ( ) . get input format ( ) . equals ( h cat constants . hive_rcfile_if_class ) ) ; driver . run ( __str__ ) ;,table has instrumentation,success,sub,3,5,2,2,2,0,5,0
enable table @$ use retain assignment to assign regions .,admin . enable table ( table name ) . join ( ) ; list < h region location > regions2 = async meta table accessor . get tableh region locations ( meta table @$ table name ) . get ( ) ;,use retain assignment,success,sub,3,4,2,2,2,0,5,0
window do fn operator does not use a do fn,this . requires stable input = do fn != null && do fn signatures . get signature ( do fn . get class ( ) ) . process element ( ) . requires stable input ( ) ;,a do fn,success,sub,1,2,2,2,0,1,4,1
receiver decrypts the message using the sender 's public key,byte [ ] decrypt bytes = receiver . decrypt data ( encrypted challenge ) ;,receiver decrypts message,success,sub,5,5,2,2,0,1,4,1
check that the starting event occurs before the started event,assert true ( listener . starting time <= listener . started time @$ __str__ ) ;,the started event,success,sub,4,4,2,2,1,0,0,2
if the user sets a message id @$ use it .,final string message id = one way feature . get message id ( ) ; if ( ! is message id added && message id != null ) { headers . add ( new string header ( av . messageid tag @$ message id ) ) ; },user sets id,success,sub,4,4,2,2,1,0,0,2
the user scheduler captures context,assert true ( results . is context initialized observe on . get ( ) ) ;,scheduler captures context,success,sub,3,2,2,2,1,0,0,2
let 's actually create cache on non affinity server .,srv3 . cache ( query utils . create table cache name ( query utils . dflt_schema @$ __str__ ) ) ;,let create cache,success,sub,4,3,1,1,0,0,0,2
we bypass the standard equals method that resolve the hostname,assert that ( slave . get channel ( ) . call ( new url builder callable ( __str__ ) ) @$ not ( equal to ( slave . get channel ( ) . call ( new url builder callable ( __str__ ) ) ) ) ) ;,standard equals method,success,sub,2,4,1,1,0,0,0,2
check that method under test throws npe,try { epki . get key spec ( ( key ) null @$ __str__ ) ; fail ( get name ( ) + __str__ ) ; } catch ( null pointer exception ok ) { },method throws npe,success,sub,4,3,1,1,0,0,0,2
run the buck kill command,buck kill command handler handler = new buck kill command handler ( project @$ buck command . kill ) ; buck build manager . get instance ( project ) . run buck command while connected to buck ( handler @$ action_title @$ buck module ) ;,buck kill command,success,sub,3,5,2,0,0,0,1,1
end if : got four characters,if ( i == __num__ ) { return - __num__ ; } else { throw new java . io . io exception ( __str__ ) ; },end got characters,success,sub,2,1,2,0,0,0,1,1
asynchronous release the queue @$ but still is single thread,if ( _buffer . get cursor ( ) > _consumer . get ( ) ) consume batch when available ( handler ) ;,asynchronous release queue,success,sub,4,5,2,0,0,0,1,1
verify that file system does not support unix attributes,try { cfg . file system . read attributes ( path @$ __str__ ) ; throw e ; } catch ( unsupported operation exception unsupported ) { } catch ( io exception ioe ) { throw new runtime exception ( ioe ) ; },system support attributes,success,sub,2,4,2,0,0,1,0,1
recursively collect methods for all superinterfaces .,for ( class doc superintf : intf . interfaces ( ) ) { if ( ! collect remote methods ( superintf @$ table ) ) { errors = true ; } } return ! errors ;,recursively collect methods,success,sub,2,2,2,0,0,1,0,1
generate the map join operator,return map join processor . convertsmb join to map join ( physical context . get conf ( ) @$ newsmb join op @$ map join pos @$ true ) ;,map join operator,success,sub,3,3,2,0,0,1,0,1
ruby client should set the path unescaped in the api file,assert true ( file utils . read file to string ( file @$ standard charsets . utf_8 ) . contains ( __str__ ) ) ;,client set path,success,sub,2,5,2,3,3,1,0,2
read default write object indicator,boolean called default write object = read boolean ( ) ; read object state . begin unmarshal custom value ( this @$ called default write object @$ ( current class desc . read object method != null ) ) ; if ( current class desc . has read object ( ) ) set state ( in_read_object_remote_not_custom_marshaled ) ;,default write indicator,success,sub,2,4,2,3,3,1,0,2
it 's an array field type @$ lets check the inner type,inner field type . check compatibility ( ( ( array field type ) other ) . inner field type @$ conflicts @$ strict ) ;,type lets check,success,sub,4,4,2,3,3,1,0,2
ghost components will have a null logger,if ( existing node . get logger ( ) != null ) { existing node . get logger ( ) . debug ( __str__ @$ new object [ ] { id @$ new type @$ bundle coordinate } ) ; } final extension manager extension manager = flow controller . get extension manager ( ) ;,components have logger,success,sub,2,4,2,3,3,1,0,2
response impl will make the headers unmodifiable,final map < string @$ string > modifiable headers = new tree map < string @$ string > ( string . case_insensitive_order ) ; modifiable headers . put all ( raw response . get headers ( ) ) ;,impl make unmodifiable,success,sub,2,2,2,3,3,1,0,2
enum class needed imports for jackson 's json creator,if ( additional properties . contains key ( serialization_library_jackson ) ) { model . imports . add ( __str__ ) ; model . imports . add ( __str__ ) ; },class needed imports,success,sub,4,4,2,3,3,1,0,2
table should not contain any footers at initialization,assert null ( table . get column footer ( __str__ ) ) ; assert null ( table . get column footer ( __str__ ) ) ; assert null ( table . get column footer ( __str__ ) ) ;,table contain footers,success,sub,4,5,2,2,3,1,0,1
the used resource should still 4 gb and negative available resource,wait memory ( scheduler @$ nm id @$ __num__ * gb @$ - __num__ * gb @$ __num__ @$ __num__ * __num__ ) ;,resource and resource,success,sub,2,2,2,2,3,1,0,1
handler does n't set a result on profile,assert false ( response . to string ( ) @$ response . has defined ( result ) ) ;,handler set result,success,sub,4,3,2,2,3,1,0,1
get jpa managed entity through the repository,message message = message repository . find one ( __num__ ) ; assert not null ( message ) ; assert equals ( __str__ @$ message . get text ( ) ) ;,jpa managed entity,success,sub,4,4,2,2,0,1,0,2
the new calc collation must match the original sort collation,result = calc . copy ( calc . get trait set ( ) . replace ( orig sort collation ) @$ index scan @$ calc . get program ( ) @$ calc . get split count ( ) ) ;,collation match collation,success,sub,3,5,2,2,0,1,0,2
sigar uses jni and does not work in local mode,if ( ! nimbus client . is local override ( ) ) { worker metrics . put ( __str__ @$ __str__ ) ; },sigar uses jni,success,sub,2,2,2,2,0,1,0,2
check choose server alias for rsa keys .,results rsa = km . choose server alias ( __str__ @$ null @$ null ) ; if ( results rsa == null ) { throw new exception ( __str__ ) ; } system . out . println ( __str__ ) ;,check choose alias,success,sub,4,4,2,2,0,1,0,2
a camera preview frame comes . request a frame .,byte [ ] picture = new byte [ length ] ; frame frame = manager . get frame ( picture @$ __num__ @$ __num__ ) ;,camera request frame,success,sub,3,5,2,2,3,1,4,2
retry with the old formatter which uses synchronization locks,try { parsed = generic formatter . short_day_formatter . parse ( date str @$ __num__ ) . get time ( ) ; } catch ( final parse exception pe ) { parsed = new date ( ) ; },which uses locks,success,sub,5,5,2,2,3,1,4,2
fetch the auto complete text view and set an adapter,auto complete text view actv = find view by id ( r . id . widgets_autocompletetextview ) ; actv . set adapter ( new array adapter < > ( this @$ android . r . layout . simple_dropdown_item_1line @$ cheeses . s cheese strings ) ) ;,auto complete view,success,sub,4,4,2,2,3,1,4,2
an interface will get the reloadable static state manager instance,assert equals ( __str__ @$ to string field ( itype . bytes loaded @$ __str__ ) ) ;,interface get instance,success,sub,2,2,2,1,1,1,0,1
second call must not log another message,assert that ( under test . is operational ( ) ) . is false ( ) ; assert that ( memory appender . events ) . extracting ( i logging event :: get level @$ i logging event :: get message ) . contains only once ( tuple ( level . info @$ __str__ ) ) ;,call log message,success,sub,4,5,2,1,1,1,0,1
1 : no stats since hbm.xml ca n't enable natural id caching,assert equals ( __num__ @$ session factory ( ) . get statistics ( ) . get natural id cache put count ( ) ) ;,stats enable caching,success,sub,3,4,1,2,0,3,0,1
remove timestamp should also be clearing the last modified timestamp,m exif . remove timestamp ( ) ; assert that ( m exif . get last modified timestamp ( ) ) . is equal to ( exif . invalid_timestamp ) ;,timestamp clearing timestamp,success,sub,4,4,1,2,0,3,0,1
the one join column for this specialized class .,long column vector join col vector = ( long column vector ) batch . cols [ single join column ] ; long [ ] vector = join col vector . vector ;,one join column,success,sub,3,2,1,2,0,3,0,1
this loop may throw an io exception,while ( true ) { int bytes read = as . read ( loaded audio @$ loaded audio byte length @$ int len - loaded audio byte length ) ; if ( bytes read <= __num__ ) { as . close ( ) ; break ; } loaded audio byte length += bytes read ; },loop throw exception,success,sub,4,4,2,1,2,2,0,1
synchronize so default value does n't override other default value,synchronized ( session ) { object result = session . get attribute ( name ) ; if ( result == null && default value != null ) { session . set attribute ( name @$ default value ) ; result = default value ; } return result ; },value override value,success,sub,4,5,2,1,2,2,0,1
top horizontal non croppped part,height = this . crop zone rect . y - this . image rect . y ; if ( height > __num__ ) { g . fill rect ( this . crop zone rect . x @$ this . image rect . y @$ this . crop zone rect . width @$ height ) ; },non croppped part,success,sub,4,3,2,1,2,2,0,1
this method always throws activation exception,user service . activate user ( __str__ ) . to blocking ( ) . single ( ) ;,method throws exception,success,sub,4,5,2,3,3,2,0,2
user 6 has other global permission,user dto user6 = db . users ( ) . insert user ( with email ( __str__ ) ) ; db . users ( ) . insert permission on user ( organization1 @$ user6 @$ administer_quality_profiles ) ;,user has permission,success,sub,3,5,2,3,3,2,0,2
constructing an a should trigger an injection,injector . get instance ( a . class ) ; assert equals ( __num__ @$ injections . get and set ( __num__ ) ) ;,a trigger injection,success,sub,3,4,2,3,3,2,0,2
merge input fields : data fields override header fields,if ( fields from header != null ) { if ( ! ( fields from header instanceof point builder ) ) { throw new illegal state exception ( __str__ + fields from header ) ; } fields from data . merge with header ( ( point builder ) fields from header ) ; },fields override fields,success,sub,4,5,2,1,1,0,4,0
this version gives a task that rest li runs,request < string > req = builders . < string > action ( __str__ ) . build ( ) ; get client ( ) . send request ( req ) . get response ( ) ;,version gives task,success,sub,4,3,2,1,1,0,4,0
no intersection between clip area and segment computed corner : bottom left,clippable . init ( ) ; segment clipper . clip ( - __num__ @$ - __num__ @$ __num__ @$ __num__ ) ; assert . assert equals ( __num__ @$ points . size ( ) ) ;,intersection computed corner,success,sub,4,5,2,1,1,0,4,0
completing the task will end the process instance,task service . complete ( task . get id ( ) ) ; assert process ended ( proc id ) ;,task end instance,success,sub,1,4,2,1,0,2,0,1
"param ""types will not include 'this '",std type list param types = desc . get parameter types ( ) ; int sz param types = param types . size ( ) ;,"types include ""this""",success,sub,1,1,2,1,0,2,0,1
any request to open gets a new bogus channel,mockito . when ( mock gcs util . open ( mockito . any ( gcs path . class ) ) ) . then ( invocation -> file channel . open ( files . create temp file ( __str__ @$ __str__ ) @$ standard open option . create @$ standard open option . delete_on_close ) ) ;,request gets channel,success,sub,2,5,2,1,0,2,0,1
clients expected initial result .,int [ ] results cnt = new int [ ] { __num__ @$ __num__ @$ __num__ } ;,clients expected result,success,sub,5,5,2,0,0,1,0,1
sets payload to empty as frame contains no data,frame builder . payload ( new byte [ ] { } ) ; curr bytes . reset ( ) ; curr state = beats state . complete ; window size = frame builder . data size ; break ;,frame contains data,success,sub,5,5,2,0,0,1,0,1
classify 1 has entity a as an allowed type,assert true ( classify type1 . can apply to entity type ( entity typea ) ) ;,1 has entity,success,sub,1,1,2,0,0,1,0,1
let linger run its course .,callback . assert no callback ( ) ; final int linger timeout ms = m service . m linger delay ms + m service . m linger delay ms / __num__ ; callback . expect callback ( callback entry . lost @$ m cell network agent @$ linger timeout ms ) ;,linger run course,success,sub,4,5,2,1,0,2,5,1
fall back to default value suppose column label contains table name,if ( column label . contains ( __str__ ) ) { table name = string utils . substring before last ( column label @$ __str__ ) ; },label contains name,success,sub,4,5,2,1,0,2,5,1
to start @$ offer a box which contains all of the colors,pq . offer ( new vbox ( __num__ @$ m colors . length - __num__ ) ) ;,which contains all,success,sub,5,5,2,1,0,2,5,1
mark known lc makes string 1 longer,int sb len = ( knownlc words != null ) ? len + __num__ : len ;,lc makes string,success,sub,2,5,1,3,3,3,0,1
a volt db extension to avoid using exceptions for flow control .,if ( ! is option ) { if ( ! prefer to throw ) { return unexpected token ( ) ; } throw unexpected token ( ) ; },volt db extension,success,sub,3,2,1,3,3,3,0,1
test missing proxy class class not found exception,oin = new proxy blind input stream ( new byte array input stream ( bout . to byte array ( ) ) ) ; try { oin . read object ( ) ; throw new error ( ) ; } catch ( class not found exception ex ) { },class found exception,success,sub,4,5,1,3,3,3,0,1
client should have noticed the error,assert that ( __str__ @$ client socket . error latch . await ( __num__ @$ seconds ) @$ is ( true ) ) ; assert that ( __str__ @$ client socket . error . get ( ) @$ instance of ( message too large exception . class ) ) ;,client noticed error,success,sub,3,4,1,2,3,0,0,2
user has specified initial context factory ; try to get it,if ( my props != null && my props . get ( context . initial_context_factory ) != null ) { get default init ctx ( ) ; },user specified factory,success,sub,4,4,1,2,3,0,0,2
another producer has moved the sequence failed to increment,so element ( buffer @$ calc element offset ( p index @$ mask ) @$ e ) ; so sequence ( s buffer @$ seq offset @$ p index + __num__ ) ; return true ;,producer moved sequence,success,sub,4,4,1,2,3,0,0,2
component 4 is try block map pointer or displacement .,return eh data type utilities . get component address ( get data type ( ) @$ try_block_map_ordinal @$ get mem buffer ( ) ) ;,component try pointer,success,sub,3,5,2,1,0,1,4,1
authorization header must have a payload,if ( auth header base64 string == null || auth header base64 string . is empty ( ) ) { throw new http authentication exception ( __str__ + __str__ ) ; } return auth header base64 string ;,header have payload,success,sub,4,5,2,1,0,1,4,1
training causes all models to observe data,for ( vector . element e : weights . non zeroes ( ) ) { int index = e . index ( ) ; classifier . train ( index @$ vector @$ weights . get ( index ) ) ; },training causes models,success,sub,3,4,2,1,0,1,4,1
vpn is using cell | wi fi .,m service . set underlying networks for vpn ( new network [ ] { m cell network agent . get network ( ) @$ m wi fi network agent . get network ( ) } ) ; wait for idle ( ) ;,vpn using fi,success,sub,3,4,2,2,0,2,0,2
does unaltered block still match ref block ?,bos . reset ( ) ; bs ref . serialize ( b ref @$ bos ) ; ser deser ( bs @$ b1 @$ bos . to byte array ( ) @$ null @$ null ) ;,block match block,success,sub,3,4,2,2,0,2,0,2
mock server to allow dynamically generated certificates to be accepted,httpsurl connection . set defaultssl socket factory ( new key store factory ( new mock server logger ( ) ) . ssl context ( ) . get socket factory ( ) ) ; mock server = client and server . start client and server ( port factory . find free port ( ) ) ;,server generated certificates,success,sub,3,3,1,2,0,3,0,1
locked cleanup may generate notifications we can send unlocked,if ( ! is held by current thread ( ) ) { map . process pending notifications ( ) ; },cleanup generate notifications,success,sub,1,5,1,2,0,3,0,1
user can see these projects,index for user ( user1 @$ new doc ( ) . set languages ( singleton list ( __str__ ) ) @$ new doc ( ) . set languages ( as list ( __str__ @$ __str__ ) ) ) ;,user see projects,success,sub,4,5,2,2,3,3,0,1
let super do its job first,super . setup view interceptors ( view ) ; add view serialization interceptor ( view ) ;,super do job,success,sub,4,5,2,2,3,3,0,1
concurrent hash map does not need synch . here,for ( abstract thread group thread group : groups ) { thread group . wait threads stopped ( ) ; },map need synch,success,sub,1,5,2,1,0,3,1,1
clear to let gc do its work,int new size = size - ( to index - from index ) ; for ( int i = new size ; i < size ; i ++ ) { element data [ i ] = null ; } size = new size ;,gc do work,success,sub,2,5,2,1,0,3,1,1
resetting max length should not remove maxlength attribute,tf . add focus listener ( event -> { tf . set max length ( __num__ ) ; } ) ;,length remove attribute,success,sub,2,2,2,0,0,1,0,1
restarted rm has the failed app info too .,rm2 . wait for state ( app1 . get application id ( ) @$ rm app state . failed ) ;,rm has info,success,sub,3,2,2,0,0,1,0,1
