all surrogate pairs with this lead surrogate have only irrelevant data,if ( ( norm32 & mask ) == __num__ ) { return __num__ ; } else { return get norm32 from surrogate pair ( norm32 @$ args . c ) ; },pairs have data,success,sub,4,4,2,4,4,4,5,2
one of the 2 threads should get an optimistic lock exception,assert equals ( __num__ @$ exceptions . size ( ) ) ; assert true ( exceptions . get ( __num__ ) instanceof activiti optimistic locking exception ) ;,one get exception,success,sub,4,4,2,4,4,4,5,2
the facade only contains the fallback behavior,assert . assert true ( router facade . global policy map . contains key ( def queue key ) && router facade . global policy map . size ( ) == __num__ ) ;,facade contains behavior,success,sub,1,5,2,4,4,1,0,2
ensure moving task between two stacks updates resumed activity,r . set state ( resumed @$ __str__ ) ; assert equals ( r @$ m stack . get resumed activity ( ) ) ; final activity stack dest stack = m root activity container . get default display ( ) . create stack ( windowing_mode_fullscreen @$ activity_type_standard @$ true ) ;,updates resumed activity,success,sub,2,5,2,4,4,1,0,2
second insert will violate the primary key constraint,volt queuesql ( insertp1 @$ __num__ @$ __num__ ) ; volt executesql ( ) ;,insert violate constraint,success,sub,1,5,2,4,4,1,0,2
close server 2 and pause so server has a chance to close,close server ( server2 ) ; wait . pause ( __num__ * __num__ ) ; wait for cqs disconnected ( client @$ __str__ @$ __num__ ) ;,server has chance,success,sub,4,5,2,3,4,4,3,0
this panel wraps the results panel and guarantees the scrolling behaviour,j panel wrapper = new j panel ( new border layout ( ) ) ; wrapper . set background ( color scheme . dark_gray_color ) ; wrapper . add ( search items panel @$ border layout . north ) ;,panel wraps panel,success,sub,3,3,2,3,4,4,3,0
assume root always has a parent,if ( is root ( path ) ) { return true ; } string parent key = get parent path ( path ) ; return parent key != null && is directory ( parent key ) ;,root has parent,success,sub,4,5,2,3,4,4,3,0
this is only available after the backend initialized the serializer,type serializer < string > value serializer = kv id . get serializer ( ) ;,backend initialized serializer,success,sub,3,4,2,2,2,0,5,0
assert that the table created still has no hcat instrumentation,table table2 = client . get table ( __str__ @$ __str__ ) ; assert . assert true ( table2 . get sd ( ) . get input format ( ) . equals ( h cat constants . hive_rcfile_if_class ) ) ; driver . run ( __str__ ) ;,table has instrumentation,success,sub,3,5,2,2,2,0,5,0
enable table @$ use retain assignment to assign regions .,admin . enable table ( table name ) . join ( ) ; list < h region location > regions2 = async meta table accessor . get tableh region locations ( meta table @$ table name ) . get ( ) ;,use retain assignment,success,sub,3,4,2,2,2,0,5,0
window do fn operator does not use a do fn,this . requires stable input = do fn != null && do fn signatures . get signature ( do fn . get class ( ) ) . process element ( ) . requires stable input ( ) ;,a do fn,success,sub,1,2,2,2,0,1,4,1
receiver decrypts the message using the sender 's public key,byte [ ] decrypt bytes = receiver . decrypt data ( encrypted challenge ) ;,receiver decrypts message,success,sub,5,5,2,2,0,1,4,1
check that the starting event occurs before the started event,assert true ( listener . starting time <= listener . started time @$ __str__ ) ;,the started event,success,sub,4,4,2,2,1,0,0,2
if the user sets a message id @$ use it .,final string message id = one way feature . get message id ( ) ; if ( ! is message id added && message id != null ) { headers . add ( new string header ( av . messageid tag @$ message id ) ) ; },user sets id,success,sub,4,4,2,2,1,0,0,2
the user scheduler captures context,assert true ( results . is context initialized observe on . get ( ) ) ;,scheduler captures context,success,sub,3,2,2,2,1,0,0,2
let 's actually create cache on non affinity server .,srv3 . cache ( query utils . create table cache name ( query utils . dflt_schema @$ __str__ ) ) ;,let create cache,success,sub,4,3,1,1,0,0,0,2
we bypass the standard equals method that resolve the hostname,assert that ( slave . get channel ( ) . call ( new url builder callable ( __str__ ) ) @$ not ( equal to ( slave . get channel ( ) . call ( new url builder callable ( __str__ ) ) ) ) ) ;,standard equals method,success,sub,2,4,1,1,0,0,0,2
check that method under test throws npe,try { epki . get key spec ( ( key ) null @$ __str__ ) ; fail ( get name ( ) + __str__ ) ; } catch ( null pointer exception ok ) { },method throws npe,success,sub,4,3,1,1,0,0,0,2
run the buck kill command,buck kill command handler handler = new buck kill command handler ( project @$ buck command . kill ) ; buck build manager . get instance ( project ) . run buck command while connected to buck ( handler @$ action_title @$ buck module ) ;,buck kill command,success,sub,3,5,2,0,0,0,1,1
end if : got four characters,if ( i == __num__ ) { return - __num__ ; } else { throw new java . io . io exception ( __str__ ) ; },end got characters,success,sub,2,1,2,0,0,0,1,1
asynchronous release the queue @$ but still is single thread,if ( _buffer . get cursor ( ) > _consumer . get ( ) ) consume batch when available ( handler ) ;,asynchronous release queue,success,sub,4,5,2,0,0,0,1,1
verify that file system does not support unix attributes,try { cfg . file system . read attributes ( path @$ __str__ ) ; throw e ; } catch ( unsupported operation exception unsupported ) { } catch ( io exception ioe ) { throw new runtime exception ( ioe ) ; },system support attributes,success,sub,2,4,2,0,0,1,0,1
recursively collect methods for all superinterfaces .,for ( class doc superintf : intf . interfaces ( ) ) { if ( ! collect remote methods ( superintf @$ table ) ) { errors = true ; } } return ! errors ;,recursively collect methods,success,sub,2,2,2,0,0,1,0,1
generate the map join operator,return map join processor . convertsmb join to map join ( physical context . get conf ( ) @$ newsmb join op @$ map join pos @$ true ) ;,map join operator,success,sub,3,3,2,0,0,1,0,1
ruby client should set the path unescaped in the api file,assert true ( file utils . read file to string ( file @$ standard charsets . utf_8 ) . contains ( __str__ ) ) ;,client set path,success,sub,2,5,2,3,3,1,0,2
read default write object indicator,boolean called default write object = read boolean ( ) ; read object state . begin unmarshal custom value ( this @$ called default write object @$ ( current class desc . read object method != null ) ) ; if ( current class desc . has read object ( ) ) set state ( in_read_object_remote_not_custom_marshaled ) ;,default write indicator,success,sub,2,4,2,3,3,1,0,2
it 's an array field type @$ lets check the inner type,inner field type . check compatibility ( ( ( array field type ) other ) . inner field type @$ conflicts @$ strict ) ;,type lets check,success,sub,4,4,2,3,3,1,0,2
ghost components will have a null logger,if ( existing node . get logger ( ) != null ) { existing node . get logger ( ) . debug ( __str__ @$ new object [ ] { id @$ new type @$ bundle coordinate } ) ; } final extension manager extension manager = flow controller . get extension manager ( ) ;,components have logger,success,sub,2,4,2,3,3,1,0,2
response impl will make the headers unmodifiable,final map < string @$ string > modifiable headers = new tree map < string @$ string > ( string . case_insensitive_order ) ; modifiable headers . put all ( raw response . get headers ( ) ) ;,impl make unmodifiable,success,sub,2,2,2,3,3,1,0,2
enum class needed imports for jackson 's json creator,if ( additional properties . contains key ( serialization_library_jackson ) ) { model . imports . add ( __str__ ) ; model . imports . add ( __str__ ) ; },class needed imports,success,sub,4,4,2,3,3,1,0,2
table should not contain any footers at initialization,assert null ( table . get column footer ( __str__ ) ) ; assert null ( table . get column footer ( __str__ ) ) ; assert null ( table . get column footer ( __str__ ) ) ;,table contain footers,success,sub,4,5,2,2,3,1,0,1
the used resource should still 4 gb and negative available resource,wait memory ( scheduler @$ nm id @$ __num__ * gb @$ - __num__ * gb @$ __num__ @$ __num__ * __num__ ) ;,resource and resource,success,sub,2,2,2,2,3,1,0,1
handler does n't set a result on profile,assert false ( response . to string ( ) @$ response . has defined ( result ) ) ;,handler set result,success,sub,4,3,2,2,3,1,0,1
get jpa managed entity through the repository,message message = message repository . find one ( __num__ ) ; assert not null ( message ) ; assert equals ( __str__ @$ message . get text ( ) ) ;,jpa managed entity,success,sub,4,4,2,2,0,1,0,2
the new calc collation must match the original sort collation,result = calc . copy ( calc . get trait set ( ) . replace ( orig sort collation ) @$ index scan @$ calc . get program ( ) @$ calc . get split count ( ) ) ;,collation match collation,success,sub,3,5,2,2,0,1,0,2
sigar uses jni and does not work in local mode,if ( ! nimbus client . is local override ( ) ) { worker metrics . put ( __str__ @$ __str__ ) ; },sigar uses jni,success,sub,2,2,2,2,0,1,0,2
check choose server alias for rsa keys .,results rsa = km . choose server alias ( __str__ @$ null @$ null ) ; if ( results rsa == null ) { throw new exception ( __str__ ) ; } system . out . println ( __str__ ) ;,check choose alias,success,sub,4,4,2,2,0,1,0,2
a camera preview frame comes . request a frame .,byte [ ] picture = new byte [ length ] ; frame frame = manager . get frame ( picture @$ __num__ @$ __num__ ) ;,camera request frame,success,sub,3,5,2,2,3,1,4,2
retry with the old formatter which uses synchronization locks,try { parsed = generic formatter . short_day_formatter . parse ( date str @$ __num__ ) . get time ( ) ; } catch ( final parse exception pe ) { parsed = new date ( ) ; },which uses locks,success,sub,5,5,2,2,3,1,4,2
fetch the auto complete text view and set an adapter,auto complete text view actv = find view by id ( r . id . widgets_autocompletetextview ) ; actv . set adapter ( new array adapter < > ( this @$ android . r . layout . simple_dropdown_item_1line @$ cheeses . s cheese strings ) ) ;,auto complete view,success,sub,4,4,2,2,3,1,4,2
an interface will get the reloadable static state manager instance,assert equals ( __str__ @$ to string field ( itype . bytes loaded @$ __str__ ) ) ;,interface get instance,success,sub,2,2,2,1,1,1,0,1
second call must not log another message,assert that ( under test . is operational ( ) ) . is false ( ) ; assert that ( memory appender . events ) . extracting ( i logging event :: get level @$ i logging event :: get message ) . contains only once ( tuple ( level . info @$ __str__ ) ) ;,call log message,success,sub,4,5,2,1,1,1,0,1
1 : no stats since hbm.xml ca n't enable natural id caching,assert equals ( __num__ @$ session factory ( ) . get statistics ( ) . get natural id cache put count ( ) ) ;,stats enable caching,success,sub,3,4,1,2,0,3,0,1
remove timestamp should also be clearing the last modified timestamp,m exif . remove timestamp ( ) ; assert that ( m exif . get last modified timestamp ( ) ) . is equal to ( exif . invalid_timestamp ) ;,timestamp clearing timestamp,success,sub,4,4,1,2,0,3,0,1
the one join column for this specialized class .,long column vector join col vector = ( long column vector ) batch . cols [ single join column ] ; long [ ] vector = join col vector . vector ;,one join column,success,sub,3,2,1,2,0,3,0,1
this loop may throw an io exception,while ( true ) { int bytes read = as . read ( loaded audio @$ loaded audio byte length @$ int len - loaded audio byte length ) ; if ( bytes read <= __num__ ) { as . close ( ) ; break ; } loaded audio byte length += bytes read ; },loop throw exception,success,sub,4,4,2,1,2,2,0,1
synchronize so default value does n't override other default value,synchronized ( session ) { object result = session . get attribute ( name ) ; if ( result == null && default value != null ) { session . set attribute ( name @$ default value ) ; result = default value ; } return result ; },value override value,success,sub,4,5,2,1,2,2,0,1
top horizontal non croppped part,height = this . crop zone rect . y - this . image rect . y ; if ( height > __num__ ) { g . fill rect ( this . crop zone rect . x @$ this . image rect . y @$ this . crop zone rect . width @$ height ) ; },non croppped part,success,sub,4,3,2,1,2,2,0,1
this method always throws activation exception,user service . activate user ( __str__ ) . to blocking ( ) . single ( ) ;,method throws exception,success,sub,4,5,2,3,3,2,0,2
user 6 has other global permission,user dto user6 = db . users ( ) . insert user ( with email ( __str__ ) ) ; db . users ( ) . insert permission on user ( organization1 @$ user6 @$ administer_quality_profiles ) ;,user has permission,success,sub,3,5,2,3,3,2,0,2
constructing an a should trigger an injection,injector . get instance ( a . class ) ; assert equals ( __num__ @$ injections . get and set ( __num__ ) ) ;,a trigger injection,success,sub,3,4,2,3,3,2,0,2
merge input fields : data fields override header fields,if ( fields from header != null ) { if ( ! ( fields from header instanceof point builder ) ) { throw new illegal state exception ( __str__ + fields from header ) ; } fields from data . merge with header ( ( point builder ) fields from header ) ; },fields override fields,success,sub,4,5,2,1,1,0,4,0
this version gives a task that rest li runs,request < string > req = builders . < string > action ( __str__ ) . build ( ) ; get client ( ) . send request ( req ) . get response ( ) ;,version gives task,success,sub,4,3,2,1,1,0,4,0
no intersection between clip area and segment computed corner : bottom left,clippable . init ( ) ; segment clipper . clip ( - __num__ @$ - __num__ @$ __num__ @$ __num__ ) ; assert . assert equals ( __num__ @$ points . size ( ) ) ;,intersection computed corner,success,sub,4,5,2,1,1,0,4,0
completing the task will end the process instance,task service . complete ( task . get id ( ) ) ; assert process ended ( proc id ) ;,task end instance,success,sub,1,4,2,1,0,2,0,1
"param ""types will not include 'this '",std type list param types = desc . get parameter types ( ) ; int sz param types = param types . size ( ) ;,"types include ""this""",success,sub,1,1,2,1,0,2,0,1
any request to open gets a new bogus channel,mockito . when ( mock gcs util . open ( mockito . any ( gcs path . class ) ) ) . then ( invocation -> file channel . open ( files . create temp file ( __str__ @$ __str__ ) @$ standard open option . create @$ standard open option . delete_on_close ) ) ;,request gets channel,success,sub,2,5,2,1,0,2,0,1
clients expected initial result .,int [ ] results cnt = new int [ ] { __num__ @$ __num__ @$ __num__ } ;,clients expected result,success,sub,5,5,2,0,0,1,0,1
sets payload to empty as frame contains no data,frame builder . payload ( new byte [ ] { } ) ; curr bytes . reset ( ) ; curr state = beats state . complete ; window size = frame builder . data size ; break ;,frame contains data,success,sub,5,5,2,0,0,1,0,1
classify 1 has entity a as an allowed type,assert true ( classify type1 . can apply to entity type ( entity typea ) ) ;,1 has entity,success,sub,1,1,2,0,0,1,0,1
let linger run its course .,callback . assert no callback ( ) ; final int linger timeout ms = m service . m linger delay ms + m service . m linger delay ms / __num__ ; callback . expect callback ( callback entry . lost @$ m cell network agent @$ linger timeout ms ) ;,linger run course,success,sub,4,5,2,1,0,2,5,1
fall back to default value suppose column label contains table name,if ( column label . contains ( __str__ ) ) { table name = string utils . substring before last ( column label @$ __str__ ) ; },label contains name,success,sub,4,5,2,1,0,2,5,1
to start @$ offer a box which contains all of the colors,pq . offer ( new vbox ( __num__ @$ m colors . length - __num__ ) ) ;,which contains all,success,sub,5,5,2,1,0,2,5,1
mark known lc makes string 1 longer,int sb len = ( knownlc words != null ) ? len + __num__ : len ;,lc makes string,success,sub,2,5,1,3,3,3,0,1
a volt db extension to avoid using exceptions for flow control .,if ( ! is option ) { if ( ! prefer to throw ) { return unexpected token ( ) ; } throw unexpected token ( ) ; },volt db extension,success,sub,3,2,1,3,3,3,0,1
test missing proxy class class not found exception,oin = new proxy blind input stream ( new byte array input stream ( bout . to byte array ( ) ) ) ; try { oin . read object ( ) ; throw new error ( ) ; } catch ( class not found exception ex ) { },class found exception,success,sub,4,5,1,3,3,3,0,1
client should have noticed the error,assert that ( __str__ @$ client socket . error latch . await ( __num__ @$ seconds ) @$ is ( true ) ) ; assert that ( __str__ @$ client socket . error . get ( ) @$ instance of ( message too large exception . class ) ) ;,client noticed error,success,sub,3,4,1,2,3,0,0,2
user has specified initial context factory ; try to get it,if ( my props != null && my props . get ( context . initial_context_factory ) != null ) { get default init ctx ( ) ; },user specified factory,success,sub,4,4,1,2,3,0,0,2
another producer has moved the sequence failed to increment,so element ( buffer @$ calc element offset ( p index @$ mask ) @$ e ) ; so sequence ( s buffer @$ seq offset @$ p index + __num__ ) ; return true ;,producer moved sequence,success,sub,4,4,1,2,3,0,0,2
component 4 is try block map pointer or displacement .,return eh data type utilities . get component address ( get data type ( ) @$ try_block_map_ordinal @$ get mem buffer ( ) ) ;,component try pointer,success,sub,3,5,2,1,0,1,4,1
authorization header must have a payload,if ( auth header base64 string == null || auth header base64 string . is empty ( ) ) { throw new http authentication exception ( __str__ + __str__ ) ; } return auth header base64 string ;,header have payload,success,sub,4,5,2,1,0,1,4,1
training causes all models to observe data,for ( vector . element e : weights . non zeroes ( ) ) { int index = e . index ( ) ; classifier . train ( index @$ vector @$ weights . get ( index ) ) ; },training causes models,success,sub,3,4,2,1,0,1,4,1
vpn is using cell | wi fi .,m service . set underlying networks for vpn ( new network [ ] { m cell network agent . get network ( ) @$ m wi fi network agent . get network ( ) } ) ; wait for idle ( ) ;,vpn using fi,success,sub,3,4,2,2,0,2,0,2
does unaltered block still match ref block ?,bos . reset ( ) ; bs ref . serialize ( b ref @$ bos ) ; ser deser ( bs @$ b1 @$ bos . to byte array ( ) @$ null @$ null ) ;,block match block,success,sub,3,4,2,2,0,2,0,2
mock server to allow dynamically generated certificates to be accepted,httpsurl connection . set defaultssl socket factory ( new key store factory ( new mock server logger ( ) ) . ssl context ( ) . get socket factory ( ) ) ; mock server = client and server . start client and server ( port factory . find free port ( ) ) ;,server generated certificates,success,sub,3,3,1,2,0,3,0,1
locked cleanup may generate notifications we can send unlocked,if ( ! is held by current thread ( ) ) { map . process pending notifications ( ) ; },cleanup generate notifications,success,sub,1,5,1,2,0,3,0,1
user can see these projects,index for user ( user1 @$ new doc ( ) . set languages ( singleton list ( __str__ ) ) @$ new doc ( ) . set languages ( as list ( __str__ @$ __str__ ) ) ) ;,user see projects,success,sub,4,5,2,2,3,3,0,1
let super do its job first,super . setup view interceptors ( view ) ; add view serialization interceptor ( view ) ;,super do job,success,sub,4,5,2,2,3,3,0,1
concurrent hash map does not need synch . here,for ( abstract thread group thread group : groups ) { thread group . wait threads stopped ( ) ; },map need synch,success,sub,1,5,2,1,0,3,1,1
clear to let gc do its work,int new size = size - ( to index - from index ) ; for ( int i = new size ; i < size ; i ++ ) { element data [ i ] = null ; } size = new size ;,gc do work,success,sub,2,5,2,1,0,3,1,1
resetting max length should not remove maxlength attribute,tf . add focus listener ( event -> { tf . set max length ( __num__ ) ; } ) ;,length remove attribute,success,sub,2,2,2,0,0,1,0,1
restarted rm has the failed app info too .,rm2 . wait for state ( app1 . get application id ( ) @$ rm app state . failed ) ;,rm has info,success,sub,3,2,2,0,0,1,0,1
end if : got four characters,if ( i == __num__ ) { return - __num__ ; } else { throw new java . io . io exception ( __str__ ) ; },end got characters,success,obj,2,2,2,4,4,4,5,2
it 's an array field type @$ lets check the inner type,inner field type . check compatibility ( ( ( array field type ) other ) . inner field type @$ conflicts @$ strict ) ;,type lets check,success,obj,5,5,2,4,4,4,5,2
can specify orientation if app does n't fill parent .,assert equals ( screen_orientation_landscape @$ m token . get orientation ( ) ) ; m token . set fills parent ( true ) ; m token . set hidden ( true ) ; m token . sending to bottom = true ;,app fill parent,success,obj,4,5,2,4,4,4,5,2
use a small long here which will only occupy one property block,my node . set property ( __str__ @$ small value ) ; tx . commit ( ) ;,which occupy block,success,obj,1,1,2,4,4,1,0,2
reading saved data from ignite .,list < list < ? > > data = cache . query ( new sql fields query ( __str__ ) ) . get all ( ) ; system . out . println ( data ) ;,reading saved data,success,obj,3,5,2,4,4,1,0,2
only global stats make sense,_total stats . register buffer metrics ( r @$ s @$ since @$ free space ) ;,stats make sense,success,obj,1,5,2,4,4,1,0,2
be more forgiving of not finding the get listener method .,method method = introspector . find method ( source class @$ get listener method name @$ __num__ ) ; if ( method != null ) { set get listener method ( method ) ; },the get method,success,obj,2,2,2,3,4,4,3,0
query must produce only results from single region .,validate clients ( region id @$ clients2 ) ; if ( region id == unmapped_region ) fail ( ) ;,query produce results,success,obj,2,2,2,3,4,4,3,0
j label contains html text,if ( at != null ) { return at . get before index ( part @$ index ) ; },label contains text,success,obj,2,3,2,2,2,0,5,0
apps can set the interception target other than the direct parent .,final view group parent ; if ( m touch interception view group == null ) { parent = ( view group ) get parent ( ) ; } else { parent = m touch interception view group ; },apps set target,success,obj,3,4,2,2,2,0,5,0
assert valid line cnt specified equals the successfully inserted line count,assert equals ( valid line cnt @$ line count ) ; assert equals ( invalid line cnt @$ invalidlinecnt ) ;,cnt equals count,success,obj,4,4,2,2,0,1,4,1
valve use the context to log messages,when ( delta session manager . get the context ( ) ) . then return ( mock ( context . class ) ) ; when ( delta session manager . get the context ( ) . get logger ( ) ) . then return ( mock ( log . class ) ) ;,valve use context,success,obj,2,4,2,2,0,1,4,1
empty if nobody has the specified global permission,query = permission query . builder ( ) . set organization uuid ( organization . get uuid ( ) ) . set permission ( __str__ ) . build ( ) ; expect permissions ( query @$ empty list ( ) ) ;,nobody has permission,success,obj,4,4,2,2,0,1,4,1
check whether the callable threw an exception .,if ( future . is done ( ) ) { try { future . get ( ) ; } catch ( interrupted exception e ) { thread . current thread ( ) . interrupt ( ) ; throw new runtime exception ( e ) ; } it . remove ( ) ; },callable threw exception,success,obj,3,5,2,2,1,0,0,2
make sure map only contains correct types,this . extensions = collections . checked map ( new hash map < > ( ) @$ string . class @$ extension . class ) ; this . extensions . put all ( extensions ) ;,map contains types,success,obj,2,5,2,2,1,0,0,2
page transformers can do complex things that benefit from hardware layers .,if ( m page transformer != null ) { enable layers ( new state != scroll_state_idle ) ; },transformers do things,success,obj,1,1,2,2,1,0,0,2
no real charset @$ so let the default,if ( code . equals ( http post body util . transfer encoding mechanism . binary . value ( ) ) ) { mechanism = transfer encoding mechanism . binary ; } else { throw new error data decoder exception ( __str__ + code ) ; },charset let default,success,obj,1,3,1,1,0,0,0,2
the processor does n't taint the consumer span which has already finished,span processor span = take span ( consumer spans ) ; assert that ( processor span . id ( ) ) . is not equal to ( consumer span . id ( ) ) ;,processor taint span,success,obj,5,5,1,1,0,0,0,2
now do get closest on created mapfile .,map file . reader reader = new map file . reader ( qualified dir name @$ conf ) ; try { assert equals ( null @$ reader . mid key ( ) ) ; } finally { reader . close ( ) ; },now get closest,success,obj,1,5,1,1,0,0,0,2
add all the mappers with proper context add first mapper,outputqueue = chain . create blocking queue ( ) ; chain . add mapper ( context @$ outputqueue @$ __num__ ) ;,mappers add mapper,success,obj,4,5,2,0,0,0,1,1
health check satisfies probe config health conditions,probe result consumer . accept ( new probe result ( probe factory . get workspace id ( ) @$ probe factory . get machine name ( ) @$ probe factory . get server name ( ) @$ probe status . passed ) ) ;,check satisfies probe,success,obj,4,5,2,0,0,0,1,1
both should have the same number of servers .,assert equals ( first balancer . get no of servers ( ) @$ second balancer . get no of servers ( ) ) ;,both have number,success,obj,3,5,2,0,0,0,1,1
freeze failed when freeze amount less than 1 trx,ret1 = freeze balance2 ( from address @$ __num__ @$ __num__ @$ test key002 ) ; assert . assert equals ( ret1 . get code ( ) @$ grpcapi . return . response_code . contract_validate_error ) ; assert . assert equals ( ret1 . get message ( ) . to string utf8 ( ) @$ __str__ ) ;,freeze amount trx,success,obj,2,2,2,0,0,1,0,1
if there are quotes @$ build a document wide list,if ( quote annotator . gather quotes ( this . annotation document ) != null ) build document quotes list ( ) ;,list build document,success,obj,3,3,2,0,0,1,0,1
resources missing from used are using none of that resource,if ( i >= used . other resources . length ) { return __num__ ; },resources using none,success,obj,3,3,2,0,0,1,0,1
does unaltered block still match ref block ?,bos . reset ( ) ; bs ref . serialize ( b ref @$ bos ) ; ser deser ( bs @$ b1 @$ bos . to byte array ( ) @$ null @$ null ) ;,block match block,success,obj,2,2,2,3,3,1,0,2
media controller.set playlist does not ensure the equality of the items .,for ( int i = __num__ ; i < list . size ( ) ; i ++ ) { assert equals ( list . get ( i ) @$ m player . m playlist . get ( i ) . get media id ( ) ) ; },media ensure equality,success,obj,4,1,2,3,3,1,0,2
catcher also receives the exception @$ prepended :,catch args . add ( __num__ @$ thrown ) ; helper . assert called ( __str__ @$ catch args ) ; asserteq ( cast . apply ( catch args ) @$ returned ) ;,catcher receives exception,success,obj,2,2,2,3,3,1,0,2
set capacity will change length of underlying byte array,buf . set capacity ( start size ) ; assert equals ( start size @$ buf . capacity ( ) ) ; check buffer ( buf @$ empty ) ;,capacity change length,success,obj,3,4,2,3,3,1,0,2
ensure a timer throws an illegal state exception if task already cancelled,t = new timer ( ) ; test task = new timer test task ( ) ; test task . cancel ( ) ; try { t . schedule ( test task @$ __num__ @$ __num__ ) ; fail ( __str__ ) ; } catch ( illegal state exception expected ) { } t . cancel ( ) ;,timer throws exception,success,obj,4,4,2,3,3,1,0,2
strip auth token from result .,result . remove ( account manager . key_authtoken ) ; if ( log . is loggable ( tag @$ log . verbose ) ) { log . v ( tag @$ get class ( ) . get simple name ( ) + __str__ + response ) ; },strip auth token,success,obj,3,5,2,2,3,1,0,1
by some reason many hive errors have this sql state,if ( sql state . sql_08s01 . get code ( ) . equals ( sql state ) ) { return error type . normal ; },errors have state,success,obj,4,5,2,2,3,1,0,1
this one will overflow buffer .,wseg = buf . offer ( size ) ; bbuf = wseg . buffer ( ) ; bbuf . put long ( __num__ ) ; wseg . release ( ) ;,one overflow buffer,success,obj,1,5,2,2,3,1,0,1
model name can not use reserved keyword @$ e.g . return,if ( is reserved word ( camelized name ) ) { final string model name = __str__ + camelized name ; logger . warn ( camelized name + __str__ + model name ) ; return model name ; },name use keyword,success,obj,4,5,2,2,0,1,0,2
composition needs one end to be the container .,if ( relationship category == relationship category . composition ) { throw new atlas base exception ( atlas error code . relationshipdef_composition_no_container @$ name ) ; } else if ( relationship category == relationship category . aggregation ) { throw new atlas base exception ( atlas error code . relationshipdef_aggregation_no_container @$ name ) ; },composition needs end,success,obj,4,5,2,2,0,1,0,2
error arises because user has specified case sensitive affinity column name,grid test utils . assert throws ( null @$ new callable < object > ( ) { @ override public object call ( ) throws exception { execute ( __str__ ) ; return null ; } } @$ ignitesql exception . class @$ __str__ ) ;,user specified name,success,obj,4,4,2,2,3,1,4,2
this version gives a task that rest li runs,request < string > req = builders . < string > action ( __str__ ) . build ( ) ; get client ( ) . send request ( req ) . get response ( ) ;,version gives task,success,obj,2,4,2,2,3,1,4,2
1 : no stats since hbm.xml ca n't enable natural id caching,assert equals ( __num__ @$ session factory ( ) . get statistics ( ) . get natural id cache put count ( ) ) ;,stats enable caching,success,obj,3,4,2,2,3,1,4,2
subsequent discoveries should not find anything,list < kafka topic partition > second discovery = partition discoverer . discover partitions ( ) ; list < kafka topic partition > third discovery = partition discoverer . discover partitions ( ) ; assert equals ( __num__ @$ second discovery . size ( ) ) ; assert equals ( __num__ @$ third discovery . size ( ) ) ;,discoveries find anything,success,obj,3,3,2,1,1,1,0,1
check request size will throw io exception if request is rejected,if ( is large request ( length ) ) { check request size when message received ( length ) ; si . set large request size ( length ) ; },size throw exception,success,obj,4,5,2,1,1,1,0,1
all symbols must have declaration nodes .,check not null ( decl node ) ; return declare symbol ( sym . get name ( ) @$ get type ( sym ) @$ is type inferred ( sym ) @$ scope @$ decl node @$ sym . getjs doc info ( ) ) ;,symbols have nodes,success,obj,4,5,2,1,1,1,0,1
string all matches fruit names,do xquery test ( xml_snippet @$ __str__ @$ arrays . as list ( fruit names ) ) ;,all matches names,success,obj,3,4,1,2,0,3,0,1
this operation does not change the current offset of the file,if ( n > __num__ ) { decrypt ( position @$ buffer @$ offset @$ n ) ; },operation change offset,success,obj,1,1,1,2,0,3,0,1
remember that these elements got updated,for ( element element : instance . non zeroes ( ) ) { int j = element . index ( ) ; update steps . set quick ( j @$ get step ( ) ) ; update counts . increment quick ( j @$ __num__ ) ; } next step ( ) ;,elements got updated,success,obj,2,5,1,2,0,3,0,1
the current item has higher priority,final int current index = play queue . get index ( ) ; final play queue item current item = play queue . get item ( current index ) ; if ( current item == null ) return null ;,item has priority,success,obj,3,4,2,1,2,2,0,1
enable table @$ use retain assignment to assign regions .,admin . enable table ( table name ) . join ( ) ; list < h region location > regions2 = async meta table accessor . get tableh region locations ( meta table @$ table name ) . get ( ) ;,use retain assignment,success,obj,4,4,2,1,2,2,0,1
removals in array list wo n't break sorting,boolean changed = new list . remove ( o ) ; list = collections . unmodifiable list ( new list ) ; return changed ;,removals break sorting,success,obj,5,5,2,1,2,2,0,1
another producer has moved the sequence failed to increment,so element ( buffer @$ calc element offset ( p index @$ mask ) @$ e ) ; so sequence ( s buffer @$ seq offset @$ p index + __num__ ) ; return true ;,producer moved sequence,success,obj,3,5,2,3,3,2,0,2
stream 1 receives another message,buffer = create message frame ( fake message ) ; frame handler ( ) . data ( false @$ __num__ @$ buffer @$ message frame length ) ; verify ( frame writer @$ timeout ( time_out_ms ) ) . window update ( eq ( __num__ ) @$ eq ( ( long ) __num__ * message frame length ) ) ;,stream receives message,success,obj,2,4,2,3,3,2,0,2
pass empty name as child reference @$ should return parent logger,logger log2 = log . get logger ( __str__ ) ; assert that ( __str__ @$ log2 . get name ( ) @$ is ( __str__ ) ) ; assert same ( log2 @$ log @$ __str__ ) ;,name return logger,success,obj,3,4,2,3,3,2,0,2
this kinda assumes the right order,for ( plan fragment f : select stmt . get fragments ( ) ) { if ( i != __num__ ) { select bottom frag = f ; } i ++ ; },kinda assumes order,success,obj,3,5,2,1,1,0,4,0
the service group had an unknown cluster !,if ( candidate services == null ) { _log . error ( __str__ + colo cluster variant ) ; return exception_exit_code ; },group had cluster,success,obj,5,5,2,1,1,0,4,0
check whether each account matches the requested features,m accounts with features = new array list < account > ( m accounts of type . length ) ; m current account = __num__ ; check account ( ) ;,account matches features,success,obj,4,5,2,1,1,0,4,0
uri parsing has limitation .,try { uri oracle rac = uri . create ( __str__ + __str__ + __str__ + __str__ ) ; logger . debug ( oracle rac . to string ( ) ) ; logger . debug ( oracle rac . get scheme ( ) ) ; assert . fail ( ) ; } catch ( exception e ) { },parsing has limitation,success,obj,1,5,2,1,0,2,0,1
shrink data buffer id table,int [ ] new data buffer id table = new int [ new index count ] ; system . arraycopy ( data buffer id table @$ __num__ @$ new data buffer id table @$ __num__ @$ new data buffer id table . length ) ; data buffer id table = new data buffer id table ;,data buffer table,success,obj,5,5,2,1,0,2,0,1
start the delete procedure & & kill the executor,long proc id = proc exec . submit procedure ( new delete table procedure ( proc exec . get environment ( ) @$ table name ) ) ;,procedure kill executor,success,obj,2,5,2,1,0,2,0,1
o auth encodes some characters differently :,return url decoder . decode ( url @$ __str__ ) . replace ( __str__ @$ __str__ ) . replace ( __str__ @$ __str__ ) ;,auth encodes characters,success,obj,1,1,2,0,0,1,0,1
empty selection not allowed @$ keep old value,if ( ! is null selection allowed ( ) && s . is empty ( ) ) { mark as dirty ( ) ; return ; },selection keep value,success,obj,5,5,2,0,0,1,0,1
m total length contains the padding already,child left = get padding left ( ) + right - left - m total length ; break ; case gravity . center_horizontal :,length contains padding,success,obj,1,1,2,0,0,1,0,1
streams should have no effect .,path src = get test root path ( f sys @$ __str__ ) ; fs data output stream out = f sys . create ( src ) ; out . write char ( __str__ ) ;,streams have effect,success,obj,3,5,2,1,0,2,5,1
trailers always end the stream even if not explicitly set .,end of stream = true ; log builder . request trailers ( trailers ) ; log builder . increase request length ( ( http data ) o ) ;,trailers end stream,success,obj,2,5,2,1,0,2,5,1
ensure fc 2 has directory,assert . assert true ( is dir ( fc2 @$ path ) ) ; assert . assert true ( exists ( fc2 @$ path ) ) ; assert . assert false ( is file ( fc2 @$ path ) ) ;,fc has directory,success,obj,1,5,2,1,0,2,5,1
test pascal 255 select the fourth row,select rows ( table @$ addr ( __num__ ) ) ; selected row = table . get selected row ( ) ; perform action ( make string action @$ model ) ;,255 select row,success,obj,2,4,1,3,3,3,0,1
the bucket move will send a destroy region message .,return new distribution message observer ( ) { private volatile boolean done ; @ override public void before send message ( cluster distribution manager dm @$ distribution message message ) { if ( message instanceof destroy region message && ! done ) { task . run ( ) ; done = true ; } } } ;,move send message,success,obj,3,4,1,3,3,3,0,1
null should not impact result,current max = integer max kudaf . aggregate ( null @$ current max ) ; assert that ( __num__ @$ equal to ( current max ) ) ;,null impact result,success,obj,2,2,1,3,3,3,0,1
any request to open gets a new bogus channel,mockito . when ( mock gcs util . open ( mockito . any ( gcs path . class ) ) ) . then ( invocation -> file channel . open ( files . create temp file ( __str__ @$ __str__ ) @$ standard open option . create @$ standard open option . delete_on_close ) ) ;,request gets channel,success,obj,2,5,1,2,3,0,0,2
check row uses comparator to check we are writing in order .,if ( ! check row ( cell ) ) { if ( start offset < __num__ ) { start offset = out . size ( ) ; } rows offsetbaos . write int ( out . size ( ) - start offset ) ; } last cell = cell ; return encoder . write ( cell ) ;,row uses comparator,success,obj,3,4,1,2,3,0,0,2
contract created by create 2 @$ does n't have abi,assert . assert equals ( __num__ @$ smart contract . get abi ( ) . get entrys count ( ) ) ;,contract have abi,success,obj,3,3,2,1,0,1,4,1
check if session handler sends a goaway frame when closing,session handler . write inbound ( close message ) ; assert go away ( session handler . read outbound ( ) @$ local stream id ) ; assert null ( session handler . read outbound ( ) ) ; local stream id += __num__ ;,handler sends frame,success,obj,4,5,2,1,0,1,4,1
m total length contains the padding already,child top = m padding top + bottom - top - m total length ; break ;,length contains padding,success,obj,3,5,2,2,0,2,0,2
completing all the tasks ends the case instance,for ( task t : cmmn task service . create task query ( ) . case instance id ( case instance . get id ( ) ) . list ( ) ) { cmmn task service . complete ( t . get id ( ) ) ; } assert case instance ended ( case instance ) ;,tasks ends instance,success,obj,4,5,2,2,0,2,0,2
find installed font name always returns an available font name,return font tag . find installed font name ( get font name ( ) ) ;,name returns name,success,obj,5,5,1,2,0,3,0,1
authorization header must have a payload,if ( auth header base64 string == null || auth header base64 string . is empty ( ) ) { throw new http authentication exception ( __str__ + __str__ ) ; } return auth header base64 string ;,header have payload,success,obj,5,5,1,2,0,3,0,1
for now @$ simply assert since this class has a hardcoded name,if ( ! get name ( ) . equals ( name ) ) { throw new runtime exception ( __str__ + get name ( ) + __str__ + name + __str__ ) ; },class has name,success,obj,4,4,2,2,3,3,0,1
initialize the default edit mode .,get view ( ) . add view mode ( m_edit mode ) ; m_edit mode listener = new internal edit mode listener < node type @$ edge type > ( m_graph listeners ) ; m_edit mode . add listener ( m_edit mode listener ) ;,default edit mode,success,obj,4,5,2,2,3,3,0,1
sort these elements using insertion sort,a [ e1 ] = t ; a [ e2 ] = a [ e1 ] ;,elements using sort,success,obj,1,5,2,1,0,3,1,1
everyone can submit reservations on queue c .,verify submit reservation success ( queue_b_user @$ queuec ) ; verify submit reservation success ( queue_b_admin @$ queuec ) ; verify submit reservation success ( queue_a_user @$ queuec ) ; verify submit reservation success ( queue_a_admin @$ queuec ) ; verify submit reservation success ( common_user @$ queuec ) ;,everyone submit reservations,success,obj,1,5,2,1,0,3,1,1
let 's not store 'raw ' nulls but nodes,if ( value == null ) { value = null node ( ) ; },s store nulls,success,obj,4,4,2,0,0,1,0,1
each transform also gets its own group,list < string > expected groups = arrays . as list ( connector config . common_group @$ connector config . transforms_group @$ connector config . error_group @$ __str__ @$ __str__ ) ; assert equals ( expected groups @$ result . groups ( ) ) ; assert equals ( __num__ @$ result . error count ( ) ) ;,transform gets group,success,obj,3,2,2,0,0,1,0,1
modal bottom sheets have auto peek height by default .,assert that ( behavior . get peek height ( ) @$ is ( bottom sheet behavior . peek_height_auto ) ) ;,sheets have height,success,obj,1,3,2,1,0,1,4,2
set hll log 2 m .,_hll log2m = segment metadata properties configuration . get int ( segment_hll_log2m @$ hll constants . default_log2m ) ;,hll log m,success,obj,2,2,2,1,0,1,4,2
process named query i ds,list < string > named query ids = list named queries result . get named query ids ( ) ;,process named ds,success,obj,2,3,2,1,0,1,4,2
release app 2 's am container on node 2 .,scheduler . handle ( app removed event2 ) ; assert equals ( __str__ @$ __num__ @$ queue1 . get am resource usage ( ) . get memory size ( ) ) ; scheduler . update ( ) ;,release app container,success,obj,3,4,2,1,0,1,4,2
test non zero iterator .,iterator < element > it = vector . non zeroes ( ) . iterator ( ) ; int i = __num__ ; while ( it . has next ( ) ) { it . next ( ) ; ++ i ; },non zero iterator,success,obj,3,3,2,1,0,1,4,2
given : thread which awaited segment .,segment aware aware = new segment aware ( __num__ @$ false ) ; aware . check can read archive or reserve work segment ( __num__ ) ; try { aware . release work segment ( __num__ ) ; } catch ( assertion error e ) { return ; } fail ( __str__ ) ;,which awaited segment,success,obj,4,5,2,2,0,0,0,1
check that participant status listener is working ok,assert equals ( __str__ @$ room + __str__ @$ answer [ __num__ ] ) ; assert equals ( __str__ @$ room + __str__ @$ answer [ __num__ ] ) ;,listener working ok,success,obj,3,5,2,2,0,0,0,1
verify that the configuration now has three rules .,configuration = s3 client . get bucket lifecycle configuration ( bucket name ) ; system . out . println ( __str__ + configuration . get rules ( ) . size ( ) ) ;,configuration has rules,success,obj,2,5,2,2,0,0,0,1
unlike pql @$ sql expects the group columns in select statements .,string group by columns = string utils . join ( _group columns @$ __str__ ) ;,sql expects columns,success,obj,3,5,2,2,0,0,0,1
higher priority @$ so accept new work units,assert . assert true ( add files ( list @$ __str__ @$ __num__ ) ) ; assert . assert equals ( list . get work units ( ) . size ( ) @$ __num__ ) ;,priority accept units,success,obj,4,5,2,2,0,0,0,1
get namespace edits dirs removes duplicates across edits and shared.edits,collection < uri > edits dirs = fs namesystem . get namespace edits dirs ( conf ) ; assert equals ( __num__ @$ edits dirs . size ( ) ) ;,dirs removes,success,pre,5,5,2,1,0,0,3,0
do n't let the region attributes creation escape to the user,attributes factory factory = new attributes factory ( creation ) ; region attributes attrs = factory . create region attributes ( ) ; cache . set region attributes ( id @$ attrs ) ;,region attributes,success,pre,5,5,2,1,0,0,3,0
step 3 : lookup mounted file systems,byte [ ] dir = path . as byte array ( ) ; for ( unix mount entry entry : fs . get mount entries ( ) ) { if ( arrays . equals ( dir @$ entry . dir ( ) ) ) return entry ; } throw new io exception ( __str__ ) ;,mounted file,success,pre,5,5,2,1,0,0,3,0
static shared libs can not declare permission groups,if ( ! pkg . permission groups . is empty ( ) ) { throw new package manager exception ( __str__ ) ; },libs declare,success,pre,3,5,2,1,0,0,3,0
now let 's build an identical key for get,binary object builder bldr = grid ( __num__ ) . binary ( ) . builder ( __str__ ) ; bldr . set field ( __str__ @$ __num__ ) ; bldr . set field ( __str__ @$ __num__ ) ;,'s build,success,pre,3,5,2,1,0,0,3,0
set character offset info for this section,curr section core map . set ( core annotations . character offset begin annotation . class @$ section start token . get ( core annotations . character offset begin annotation . class ) ) ;,character offset,success,pre,5,5,2,1,0,0,3,0
method name can not use reserved keyword @$ e.g . return,if ( is reserved word ( sanitized operation id ) ) { logger . warn ( operation id + __str__ + underscore ( __str__ + operation id ) ) ; sanitized operation id = __str__ + sanitized operation id ; } return camelize ( sanitized operation id ) ;,name use,success,pre,4,5,2,1,0,0,3,0
d 2 has pkeys 0 to 50,for ( int i = __num__ ; i < __num__ ; ++ i ) { volt queuesql ( loadd2 @$ i @$ __str__ + string . value of ( i ) ) ; } volt executesql ( ) ;,d pkeys,success,pre,2,2,2,1,0,0,3,0
enable table @$ use retain assignment to assign regions .,admin . enable table ( table name ) . join ( ) ; list < h region location > regions2 = async meta table accessor . get tableh region locations ( meta table @$ table name ) . get ( ) ;,use retain,success,pre,5,2,2,1,0,0,3,0
only class object type can use property specific,if ( ! ( object type instanceof class object type ) ) { left declared mask = all set bit mask . get ( ) ; return ; },type use,success,pre,4,5,2,1,0,0,3,0
foo loads bar own secondary files .,list < string > bar secondaries = m bar user0 . get secondary dex paths ( ) ; notify dex load ( m foo user0 @$ bar secondaries @$ m user0 ) ;,loads bar,success,pre,5,3,2,1,0,0,3,0
null should not impact result,current max = integer max kudaf . aggregate ( null @$ current max ) ; assert that ( __num__ @$ equal to ( current max ) ) ;,null impact,success,pre,3,5,2,1,0,0,3,0
app : released api 10 dev : released api 20,verify compute target sdk version ( older_version @$ released @$ true @$ older_version ) ;,app released,success,pre,1,1,2,1,0,0,3,0
update once at end of iteration to reduce heap write traffic,cursor = i ; last ret = i - __num__ ; if ( mod count != expected mod count ) throw new concurrent modification exception ( ) ;,heap write,success,pre,5,3,2,1,0,0,3,0
we check that cookie manager returns the cookies for the main domain,url url main domain = new url ( __str__ ) ; cookies = cookie handler . get cookies for url ( man . get cookies ( ) @$ url main domain @$ cookie manager . allow_variable_cookies ) ; assert . assert equals ( __num__ @$ cookies . size ( ) ) ;,manager returns,success,pre,4,5,2,1,0,0,3,0
delegate already handles pk columns,if ( get factory ( ) . get session factory options ( ) . is comments enabled ( ) ) { insert . set comment ( __str__ + get entity name ( ) ) ; } return insert . to statement string ( ) ;,delegate handles,success,pre,2,2,2,1,0,1,0,2
update video track count @$ audio & subtitle track lists .,m video track count = __num__ ; m audio tracks = new array list < > ( ) ; m subtitle tracks = new array list < > ( ) ; m selected audio track index = __num__ ;,audio track,success,pre,3,5,2,1,0,1,0,2
record elasticsearch version and cluster name .,if ( target instanceof cluster info accessor ) { recorder . record attribute ( elasticsearch constants . args_version_annotation_key @$ ( ( cluster info accessor ) target ) . _$pinpoint$_get cluster info ( ) ) ; },record elasticsearch,success,pre,1,4,2,1,0,1,0,2
conditions to reset the loop count,if ( break loop || end of arguments ( ) || loop count >= get end index ( ) ) { reset break loop ( ) ; reset loop count ( ) ; return null ; },conditions reset,success,pre,2,3,2,1,0,1,0,2
stopship do proper check in split user mode,return code_ok ; if ( ! m injector . user manager is split system user ( ) ) { if ( device owner user id != user handle . user_system ) { return code_not_system_user ; } if ( has user setup completed ( user handle . user_system ) ) { return code_user_setup_completed ; } } else { },stopship do,success,pre,3,1,2,1,0,1,0,2
does the class have optimization info ?,if ( class optimization info . get class optimization info ( library class ) != null ) { class visitor . visit library class ( library class ) ; },class have,success,pre,2,4,2,1,0,1,0,2
driver join clause auxiliary join clause,double inner join row count = left_rows_count * right_rows_count / left_join_column_ndv * left_join_column_non_nulls * right_join_column_non_nulls * unknown_filter_coefficient ;,auxiliary join,success,pre,2,5,2,1,0,1,0,2
host must have real keyboard focus .,if ( ! m host . is focused ( ) && ! m host . request focus ( ) ) { return false ; },host have,success,pre,1,4,2,1,0,1,0,2
asynchronous release the queue @$ but still is single thread,if ( _buffer . get cursor ( ) > _consumer . get ( ) ) consume batch when available ( handler ) ;,asynchronous release,success,pre,1,3,2,1,0,1,0,2
make sure task 1 is running and blocking the execution,assert that ( task1 running . await ( __num__ @$ time unit . seconds ) ) . is true ( ) ;,task running,success,pre,1,5,2,1,0,1,0,2
verify the conflation indexes map equals the number of updates,verify conflation indexes size ( __str__ @$ __num__ @$ vm4 @$ vm5 @$ vm6 @$ vm7 ) ; vm4 . invoke ( ( ) -> wan test base . check queue size ( __str__ @$ key values . size ( ) + update key values . size ( ) ) ) ;,map equals,success,pre,2,4,2,1,0,1,0,2
spellcheck dictionary contains valencian and general accentuation,assert equals ( __num__ @$ rule . match ( lang tool . get analyzed sentence ( __str__ ) ) . length ) ;,dictionary contains,success,pre,1,3,2,1,0,1,0,2
should not do anything when cursor is null,matcher . cursor = null ; matcher . next is ( opcodes . nop ) ;,not do,success,pre,1,5,2,1,0,1,0,2
removals in array list wo n't break sorting,boolean changed = new list . remove ( o ) ; list = collections . unmodifiable list ( new list ) ; return changed ;,removals break,success,pre,1,3,2,1,0,1,0,2
check if any of the references cross the module boundaries .,if ( check modules && ref . module != null ) { if ( ref . module != fn module && ! module graph . depends on ( ref . module @$ fn module ) ) { is removable = false ; check modules = false ; } },any cross,success,pre,1,3,2,1,0,1,0,2
second cancellation should n't trigger additional callbacks,server stream . cancel ( status ) ; do ping pong ( server listener ) ;,cancellation trigger,success,pre,4,5,2,3,2,0,4,2
a volt db extension to support indexed expressions .,boolean has non column exprs = false ; if ( set == null ) { has non column exprs = true ; set = get base column names ( index exprs ) ; },volt db,success,pre,4,4,2,3,2,0,4,2
some cases use this absolute path,if ( fs != null ) { if ( root dir test enabled ( ) ) { cleanup dir ( path ( __str__ ) ) ; } cleanup dir ( get test base dir ( ) ) ; },cases use,success,pre,4,5,2,3,2,0,4,2
first heartbeat which schedules first resource .,localizer heartbeat response response = spy service . heartbeat ( stat ) ; assert equals ( __str__ @$ localizer action . live @$ response . get localizer action ( ) ) ;,which schedules,success,pre,5,5,2,3,2,0,4,2
phreak must also remove the lt from the rule network evaluator,if ( match . get rule agenda item ( ) != null ) { if ( left tuple . get memory ( ) != null ) { left tuple . get memory ( ) . remove ( left tuple ) ; } },phreak remove,success,pre,4,4,2,3,2,0,4,2
assert that the input script only contains 3 chunks,assert true ( input script . get chunks ( ) . size ( ) == __num__ ) ;,script contains,success,pre,4,4,2,3,2,0,4,2
merge input fields : data fields override header fields,if ( fields from header != null ) { if ( ! ( fields from header instanceof point builder ) ) { throw new illegal state exception ( __str__ + fields from header ) ; } fields from data . merge with header ( ( point builder ) fields from header ) ; },fields override,success,pre,5,4,2,3,2,0,4,2
first lets check that a fully opaque foreground has sufficient contrast,double test ratio = contrast calculator . calculate contrast ( foreground @$ background @$ __num__ ) ; if ( test ratio < min contrast ratio ) { return - __num__ ; },foreground has,success,pre,4,4,2,3,2,0,4,2
check that method under test throws npe,try { epki . get key spec ( ( key ) null @$ ( provider ) null ) ; fail ( get name ( ) + __str__ ) ; } catch ( null pointer exception ok ) { },method throws,success,pre,5,5,2,3,2,0,4,2
if state machine instance not exists stop retry,if ( framework error code . state machine instance not exists . equals ( e . get errcode ( ) ) ) { return branch status . phase two_ committed ; },instance exists,success,pre,4,5,2,3,2,0,4,2
the service group had an unknown cluster !,if ( candidate services == null ) { _log . error ( __str__ + colo cluster variant ) ; return exception_exit_code ; },group had,success,pre,4,4,2,3,2,0,4,2
user has specified initial context factory ; try to get it,if ( my props != null && my props . get ( context . initial_context_factory ) != null ) { get default init ctx ( ) ; },user specified,success,pre,4,5,2,3,2,0,4,2
let 's give the principal the administration permission @$ without granting access,mutable acl acl first deny = new acl impl ( identity @$ __num__ @$ acl authorization strategy @$ new console audit logger ( ) ) ; acl first deny . insert ace ( __num__ @$ base permission . administration @$ new principal sid ( auth ) @$ false ) ;,'s give,success,pre,4,4,2,3,2,0,4,2
should use root entity transformer by default,hql executor hql executor unaliased = new hql executor ( ) { protected query get query ( session s ) { return s . create query ( __str__ ) ; } } ;,use root,success,pre,4,4,2,3,2,0,4,2
the current item has higher priority,final int current index = play queue . get index ( ) ; final play queue item current item = play queue . get item ( current index ) ; if ( current item == null ) return null ;,item has,success,pre,4,5,2,3,2,0,4,2
the file we should write new content to .,path output file ; if ( old file != null && old file . exists ( ) && ! is renaming ) { output file = old file ; } else { output file = new file ; },file write,success,pre,3,5,2,3,2,2,4,2
the bucket move will send a destroy region message .,return new distribution message observer ( ) { private volatile boolean done ; @ override public void before send message ( cluster distribution manager dm @$ distribution message message ) { if ( message instanceof destroy region message && ! done ) { task . run ( ) ; done = true ; } } } ;,move send,success,pre,3,5,2,3,2,2,4,2
authorization header must have a payload,if ( auth header base64 string == null || auth header base64 string . is empty ( ) ) { throw new http authentication exception ( __str__ + __str__ ) ; } return auth header base64 string ;,header have,success,pre,5,5,2,3,2,2,4,2
subsequent error triggers does n't trigger another warning,tracker . process response ( new response ( __str__ @$ null ) @$ __str__ @$ __num__ ) ; assert tracker mismatch count ( tracker @$ __num__ ) ;,triggers trigger,success,pre,1,5,2,3,2,2,4,2
assert that the correct dir does not contain the violation .,assert true ( pairs correct . stream ( ) . none match ( p -> p . get path ( ) . equals ( cwd correct ) ) ) ;,dir contain,success,pre,4,1,2,3,2,2,4,2
manually specified value takes precedence over settings .,set enabled ( system properties . get boolean ( debug_sys_looper_stats_enabled @$ parser . get boolean ( settings_enabled_key @$ default_enabled ) ) ) ;,value takes,success,pre,4,4,2,3,2,2,4,2
test pascal 255 select the fourth row,select rows ( table @$ addr ( __num__ ) ) ; selected row = table . get selected row ( ) ; perform action ( make string action @$ model ) ;,255 select,success,pre,3,5,2,3,2,2,4,2
find installed font name always returns an available font name,return font tag . find installed font name ( get font name ( ) ) ;,name returns,success,pre,3,5,2,3,2,2,4,2
wait @$ the client no longer has access to the display .,if ( ! m window manager internal . is uid allowed on display ( cs . self reported display id @$ cs . uid ) ) { return input bind result . invalid_display_id ; },client has,success,pre,4,4,2,3,2,2,4,2
these tests do n't handle exchanges from local parallel,session . session builder session builder = test session builder ( ) . set catalog ( catalog_id ) . set schema ( __str__ ) . set system property ( __str__ @$ __str__ ) ;,tests handle,success,pre,2,2,2,3,2,2,4,2
remote exception contains useful information as against the java.lang.reflect exceptions .,if ( cause instanceof io exception ) { throw ( io exception ) cause ; } else if ( cause instanceof runtime exception ) { throw ( runtime exception ) cause ; } else { throw new io exception ( se ) ; },exception contains,success,pre,4,5,2,3,2,2,4,2
composition needs one end to be the container .,if ( relationship category == relationship category . composition ) { throw new atlas base exception ( atlas error code . relationshipdef_composition_no_container @$ name ) ; } else if ( relationship category == relationship category . aggregation ) { throw new atlas base exception ( atlas error code . relationshipdef_aggregation_no_container @$ name ) ; },composition needs,success,pre,3,3,2,3,2,2,4,2
null should not impact result,current min = double min kudaf . aggregate ( null @$ current min ) ; assert that ( new big decimal ( __num__ @$ new math context ( __num__ ) ) @$ equal to ( current min ) ) ;,null impact,success,pre,2,4,2,3,2,2,4,2
initialize the default edit mode .,get view ( ) . add view mode ( m_edit mode ) ; m_edit mode listener = new internal edit mode listener < node type @$ edge type > ( m_graph listeners ) ; m_edit mode . add listener ( m_edit mode listener ) ;,default edit,success,pre,3,5,2,3,2,2,4,2
test parallelism in detached mode @$ should use parallelism default,string [ ] parameters = { __str__ @$ __str__ @$ get test jar path ( ) } ; verify cli frontend ( get cli ( configuration ) @$ parameters @$ __num__ @$ true ) ;,parallelism use,success,pre,2,2,2,3,2,2,4,2
get drop location will throw an illegal state exception .,if ( ! support . is drop ( ) || ! ( support . get component ( ) instanceof types tree ) ) { return true ; } final j tree . drop location location = ( j tree . drop location ) support . get drop location ( ) ;,location throw,success,pre,1,3,2,4,3,1,0,2
third volume @$ again with 3 mb free space .,volumes . add ( mockito . mock ( fs volume spi . class ) ) ; mockito . when ( volumes . get ( __num__ ) . get available ( ) ) . then return ( __num__ * __num__ * __num__ ) ;,volume mb,success,pre,3,4,2,4,3,1,0,2
zap : added the type argument .,vector < object > v = get list ( uri @$ key ) ; if ( v == null || v . size ( ) == __num__ ) { return null ; } return v . get ( __num__ ) ;,zap added,success,pre,1,5,2,4,3,1,0,2
the id lists must have the same size,this . operatori ds . add ( operatorid . from job vertexid ( this . id ) ) ; this . operator ids alternatives . add ( null ) ;,lists have,success,pre,1,5,2,4,3,1,0,2
asif : a match level of zero means exact match .,if ( index expression . equals ( other expression ) && index type == other type ) { match level = get match level ( other definitions @$ index definitions @$ mapping ) ; },level means,success,pre,3,1,2,4,3,1,0,2
it 's an array field type @$ lets check the inner type,inner field type . check compatibility ( ( ( array field type ) other ) . inner field type @$ conflicts @$ strict ) ;,type lets,success,pre,1,1,2,4,3,1,0,2
start the modify procedure & & kill the executor,long proc id = proc exec . submit procedure ( new modify table procedure ( proc exec . get environment ( ) @$ new td ) ) ; int last step = __num__ ;,procedure kill,success,pre,1,4,2,4,3,1,0,2
close server 1 and pause so server has chance to close,close server ( server1 ) ; wait . pause ( __num__ * __num__ ) ; wait for cqs disconnected ( client @$ __str__ @$ __num__ ) ;,server has,success,pre,1,5,2,4,3,1,0,2
method does not throw an exception .,verify read xml returns expected signatures ( __str__ @$ package parser . signing details . signature scheme version . unknown ) ;,method throw,success,pre,1,5,2,4,3,1,0,2
lower android versions have a reference table with 1024 entries only,for ( int i = __num__ ; i < __num__ ; i ++ ) { assert true ( jni test . create and delete int array ( ) ) ; system . out . print ( i ) ; },versions have,success,pre,1,5,2,4,3,1,0,2
let the ejb jar metadata tell us what the version is,return ejb jar meta data . is version greater than or equal ( ejb jar version . ejb_3_2 ) ;,version is,success,pre,1,5,2,4,3,1,0,2
invalid port number yields an error .,check error state ( new ignite callable < void > ( ) { @ override public void call ( ) throws exception { driver manager . get connection ( __str__ ) ; return null ; } } @$ __str__ @$ __str__ ) ;,number yields,success,pre,1,1,2,4,3,1,0,2
downgrade priority as user is disconnecting the hearing aid .,if ( m service . get priority ( device ) > bluetooth profile . priority_on ) { m service . set priority ( device @$ bluetooth profile . priority_on ) ; } return m service . disconnect ( device ) ;,priority disconnecting,success,pre,1,1,2,4,3,1,0,2
