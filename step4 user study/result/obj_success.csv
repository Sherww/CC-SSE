end if : got four characters,if ( i == __num__ ) { return - __num__ ; } else { throw new java . io . io exception ( __str__ ) ; },end got characters,success,obj,2,2,2,4,4,4,5,2
it 's an array field type @$ lets check the inner type,inner field type . check compatibility ( ( ( array field type ) other ) . inner field type @$ conflicts @$ strict ) ;,type lets check,success,obj,5,5,2,4,4,4,5,2
can specify orientation if app does n't fill parent .,assert equals ( screen_orientation_landscape @$ m token . get orientation ( ) ) ; m token . set fills parent ( true ) ; m token . set hidden ( true ) ; m token . sending to bottom = true ;,app fill parent,success,obj,4,5,2,4,4,4,5,2
use a small long here which will only occupy one property block,my node . set property ( __str__ @$ small value ) ; tx . commit ( ) ;,which occupy block,success,obj,1,1,2,4,4,1,0,2
reading saved data from ignite .,list < list < ? > > data = cache . query ( new sql fields query ( __str__ ) ) . get all ( ) ; system . out . println ( data ) ;,reading saved data,success,obj,3,5,2,4,4,1,0,2
only global stats make sense,_total stats . register buffer metrics ( r @$ s @$ since @$ free space ) ;,stats make sense,success,obj,1,5,2,4,4,1,0,2
be more forgiving of not finding the get listener method .,method method = introspector . find method ( source class @$ get listener method name @$ __num__ ) ; if ( method != null ) { set get listener method ( method ) ; },the get method,success,obj,2,2,2,3,4,4,3,0
query must produce only results from single region .,validate clients ( region id @$ clients2 ) ; if ( region id == unmapped_region ) fail ( ) ;,query produce results,success,obj,2,2,2,3,4,4,3,0
j label contains html text,if ( at != null ) { return at . get before index ( part @$ index ) ; },label contains text,success,obj,2,3,2,2,2,0,5,0
apps can set the interception target other than the direct parent .,final view group parent ; if ( m touch interception view group == null ) { parent = ( view group ) get parent ( ) ; } else { parent = m touch interception view group ; },apps set target,success,obj,3,4,2,2,2,0,5,0
assert valid line cnt specified equals the successfully inserted line count,assert equals ( valid line cnt @$ line count ) ; assert equals ( invalid line cnt @$ invalidlinecnt ) ;,cnt equals count,success,obj,4,4,2,2,0,1,4,1
valve use the context to log messages,when ( delta session manager . get the context ( ) ) . then return ( mock ( context . class ) ) ; when ( delta session manager . get the context ( ) . get logger ( ) ) . then return ( mock ( log . class ) ) ;,valve use context,success,obj,2,4,2,2,0,1,4,1
empty if nobody has the specified global permission,query = permission query . builder ( ) . set organization uuid ( organization . get uuid ( ) ) . set permission ( __str__ ) . build ( ) ; expect permissions ( query @$ empty list ( ) ) ;,nobody has permission,success,obj,4,4,2,2,0,1,4,1
check whether the callable threw an exception .,if ( future . is done ( ) ) { try { future . get ( ) ; } catch ( interrupted exception e ) { thread . current thread ( ) . interrupt ( ) ; throw new runtime exception ( e ) ; } it . remove ( ) ; },callable threw exception,success,obj,3,5,2,2,1,0,0,2
make sure map only contains correct types,this . extensions = collections . checked map ( new hash map < > ( ) @$ string . class @$ extension . class ) ; this . extensions . put all ( extensions ) ;,map contains types,success,obj,2,5,2,2,1,0,0,2
page transformers can do complex things that benefit from hardware layers .,if ( m page transformer != null ) { enable layers ( new state != scroll_state_idle ) ; },transformers do things,success,obj,1,1,2,2,1,0,0,2
no real charset @$ so let the default,if ( code . equals ( http post body util . transfer encoding mechanism . binary . value ( ) ) ) { mechanism = transfer encoding mechanism . binary ; } else { throw new error data decoder exception ( __str__ + code ) ; },charset let default,success,obj,1,3,1,1,0,0,0,2
the processor does n't taint the consumer span which has already finished,span processor span = take span ( consumer spans ) ; assert that ( processor span . id ( ) ) . is not equal to ( consumer span . id ( ) ) ;,processor taint span,success,obj,5,5,1,1,0,0,0,2
now do get closest on created mapfile .,map file . reader reader = new map file . reader ( qualified dir name @$ conf ) ; try { assert equals ( null @$ reader . mid key ( ) ) ; } finally { reader . close ( ) ; },now get closest,success,obj,1,5,1,1,0,0,0,2
add all the mappers with proper context add first mapper,outputqueue = chain . create blocking queue ( ) ; chain . add mapper ( context @$ outputqueue @$ __num__ ) ;,mappers add mapper,success,obj,4,5,2,0,0,0,1,1
health check satisfies probe config health conditions,probe result consumer . accept ( new probe result ( probe factory . get workspace id ( ) @$ probe factory . get machine name ( ) @$ probe factory . get server name ( ) @$ probe status . passed ) ) ;,check satisfies probe,success,obj,4,5,2,0,0,0,1,1
both should have the same number of servers .,assert equals ( first balancer . get no of servers ( ) @$ second balancer . get no of servers ( ) ) ;,both have number,success,obj,3,5,2,0,0,0,1,1
freeze failed when freeze amount less than 1 trx,ret1 = freeze balance2 ( from address @$ __num__ @$ __num__ @$ test key002 ) ; assert . assert equals ( ret1 . get code ( ) @$ grpcapi . return . response_code . contract_validate_error ) ; assert . assert equals ( ret1 . get message ( ) . to string utf8 ( ) @$ __str__ ) ;,freeze amount trx,success,obj,2,2,2,0,0,1,0,1
if there are quotes @$ build a document wide list,if ( quote annotator . gather quotes ( this . annotation document ) != null ) build document quotes list ( ) ;,list build document,success,obj,3,3,2,0,0,1,0,1
resources missing from used are using none of that resource,if ( i >= used . other resources . length ) { return __num__ ; },resources using none,success,obj,3,3,2,0,0,1,0,1
does unaltered block still match ref block ?,bos . reset ( ) ; bs ref . serialize ( b ref @$ bos ) ; ser deser ( bs @$ b1 @$ bos . to byte array ( ) @$ null @$ null ) ;,block match block,success,obj,2,2,2,3,3,1,0,2
media controller.set playlist does not ensure the equality of the items .,for ( int i = __num__ ; i < list . size ( ) ; i ++ ) { assert equals ( list . get ( i ) @$ m player . m playlist . get ( i ) . get media id ( ) ) ; },media ensure equality,success,obj,4,1,2,3,3,1,0,2
catcher also receives the exception @$ prepended :,catch args . add ( __num__ @$ thrown ) ; helper . assert called ( __str__ @$ catch args ) ; asserteq ( cast . apply ( catch args ) @$ returned ) ;,catcher receives exception,success,obj,2,2,2,3,3,1,0,2
set capacity will change length of underlying byte array,buf . set capacity ( start size ) ; assert equals ( start size @$ buf . capacity ( ) ) ; check buffer ( buf @$ empty ) ;,capacity change length,success,obj,3,4,2,3,3,1,0,2
ensure a timer throws an illegal state exception if task already cancelled,t = new timer ( ) ; test task = new timer test task ( ) ; test task . cancel ( ) ; try { t . schedule ( test task @$ __num__ @$ __num__ ) ; fail ( __str__ ) ; } catch ( illegal state exception expected ) { } t . cancel ( ) ;,timer throws exception,success,obj,4,4,2,3,3,1,0,2
strip auth token from result .,result . remove ( account manager . key_authtoken ) ; if ( log . is loggable ( tag @$ log . verbose ) ) { log . v ( tag @$ get class ( ) . get simple name ( ) + __str__ + response ) ; },strip auth token,success,obj,3,5,2,2,3,1,0,1
by some reason many hive errors have this sql state,if ( sql state . sql_08s01 . get code ( ) . equals ( sql state ) ) { return error type . normal ; },errors have state,success,obj,4,5,2,2,3,1,0,1
this one will overflow buffer .,wseg = buf . offer ( size ) ; bbuf = wseg . buffer ( ) ; bbuf . put long ( __num__ ) ; wseg . release ( ) ;,one overflow buffer,success,obj,1,5,2,2,3,1,0,1
model name can not use reserved keyword @$ e.g . return,if ( is reserved word ( camelized name ) ) { final string model name = __str__ + camelized name ; logger . warn ( camelized name + __str__ + model name ) ; return model name ; },name use keyword,success,obj,4,5,2,2,0,1,0,2
composition needs one end to be the container .,if ( relationship category == relationship category . composition ) { throw new atlas base exception ( atlas error code . relationshipdef_composition_no_container @$ name ) ; } else if ( relationship category == relationship category . aggregation ) { throw new atlas base exception ( atlas error code . relationshipdef_aggregation_no_container @$ name ) ; },composition needs end,success,obj,4,5,2,2,0,1,0,2
error arises because user has specified case sensitive affinity column name,grid test utils . assert throws ( null @$ new callable < object > ( ) { @ override public object call ( ) throws exception { execute ( __str__ ) ; return null ; } } @$ ignitesql exception . class @$ __str__ ) ;,user specified name,success,obj,4,4,2,2,3,1,4,2
this version gives a task that rest li runs,request < string > req = builders . < string > action ( __str__ ) . build ( ) ; get client ( ) . send request ( req ) . get response ( ) ;,version gives task,success,obj,2,4,2,2,3,1,4,2
1 : no stats since hbm.xml ca n't enable natural id caching,assert equals ( __num__ @$ session factory ( ) . get statistics ( ) . get natural id cache put count ( ) ) ;,stats enable caching,success,obj,3,4,2,2,3,1,4,2
subsequent discoveries should not find anything,list < kafka topic partition > second discovery = partition discoverer . discover partitions ( ) ; list < kafka topic partition > third discovery = partition discoverer . discover partitions ( ) ; assert equals ( __num__ @$ second discovery . size ( ) ) ; assert equals ( __num__ @$ third discovery . size ( ) ) ;,discoveries find anything,success,obj,3,3,2,1,1,1,0,1
check request size will throw io exception if request is rejected,if ( is large request ( length ) ) { check request size when message received ( length ) ; si . set large request size ( length ) ; },size throw exception,success,obj,4,5,2,1,1,1,0,1
all symbols must have declaration nodes .,check not null ( decl node ) ; return declare symbol ( sym . get name ( ) @$ get type ( sym ) @$ is type inferred ( sym ) @$ scope @$ decl node @$ sym . getjs doc info ( ) ) ;,symbols have nodes,success,obj,4,5,2,1,1,1,0,1
string all matches fruit names,do xquery test ( xml_snippet @$ __str__ @$ arrays . as list ( fruit names ) ) ;,all matches names,success,obj,3,4,1,2,0,3,0,1
this operation does not change the current offset of the file,if ( n > __num__ ) { decrypt ( position @$ buffer @$ offset @$ n ) ; },operation change offset,success,obj,1,1,1,2,0,3,0,1
remember that these elements got updated,for ( element element : instance . non zeroes ( ) ) { int j = element . index ( ) ; update steps . set quick ( j @$ get step ( ) ) ; update counts . increment quick ( j @$ __num__ ) ; } next step ( ) ;,elements got updated,success,obj,2,5,1,2,0,3,0,1
the current item has higher priority,final int current index = play queue . get index ( ) ; final play queue item current item = play queue . get item ( current index ) ; if ( current item == null ) return null ;,item has priority,success,obj,3,4,2,1,2,2,0,1
enable table @$ use retain assignment to assign regions .,admin . enable table ( table name ) . join ( ) ; list < h region location > regions2 = async meta table accessor . get tableh region locations ( meta table @$ table name ) . get ( ) ;,use retain assignment,success,obj,4,4,2,1,2,2,0,1
removals in array list wo n't break sorting,boolean changed = new list . remove ( o ) ; list = collections . unmodifiable list ( new list ) ; return changed ;,removals break sorting,success,obj,5,5,2,1,2,2,0,1
another producer has moved the sequence failed to increment,so element ( buffer @$ calc element offset ( p index @$ mask ) @$ e ) ; so sequence ( s buffer @$ seq offset @$ p index + __num__ ) ; return true ;,producer moved sequence,success,obj,3,5,2,3,3,2,0,2
stream 1 receives another message,buffer = create message frame ( fake message ) ; frame handler ( ) . data ( false @$ __num__ @$ buffer @$ message frame length ) ; verify ( frame writer @$ timeout ( time_out_ms ) ) . window update ( eq ( __num__ ) @$ eq ( ( long ) __num__ * message frame length ) ) ;,stream receives message,success,obj,2,4,2,3,3,2,0,2
pass empty name as child reference @$ should return parent logger,logger log2 = log . get logger ( __str__ ) ; assert that ( __str__ @$ log2 . get name ( ) @$ is ( __str__ ) ) ; assert same ( log2 @$ log @$ __str__ ) ;,name return logger,success,obj,3,4,2,3,3,2,0,2
this kinda assumes the right order,for ( plan fragment f : select stmt . get fragments ( ) ) { if ( i != __num__ ) { select bottom frag = f ; } i ++ ; },kinda assumes order,success,obj,3,5,2,1,1,0,4,0
the service group had an unknown cluster !,if ( candidate services == null ) { _log . error ( __str__ + colo cluster variant ) ; return exception_exit_code ; },group had cluster,success,obj,5,5,2,1,1,0,4,0
check whether each account matches the requested features,m accounts with features = new array list < account > ( m accounts of type . length ) ; m current account = __num__ ; check account ( ) ;,account matches features,success,obj,4,5,2,1,1,0,4,0
uri parsing has limitation .,try { uri oracle rac = uri . create ( __str__ + __str__ + __str__ + __str__ ) ; logger . debug ( oracle rac . to string ( ) ) ; logger . debug ( oracle rac . get scheme ( ) ) ; assert . fail ( ) ; } catch ( exception e ) { },parsing has limitation,success,obj,1,5,2,1,0,2,0,1
shrink data buffer id table,int [ ] new data buffer id table = new int [ new index count ] ; system . arraycopy ( data buffer id table @$ __num__ @$ new data buffer id table @$ __num__ @$ new data buffer id table . length ) ; data buffer id table = new data buffer id table ;,data buffer table,success,obj,5,5,2,1,0,2,0,1
start the delete procedure & & kill the executor,long proc id = proc exec . submit procedure ( new delete table procedure ( proc exec . get environment ( ) @$ table name ) ) ;,procedure kill executor,success,obj,2,5,2,1,0,2,0,1
o auth encodes some characters differently :,return url decoder . decode ( url @$ __str__ ) . replace ( __str__ @$ __str__ ) . replace ( __str__ @$ __str__ ) ;,auth encodes characters,success,obj,1,1,2,0,0,1,0,1
empty selection not allowed @$ keep old value,if ( ! is null selection allowed ( ) && s . is empty ( ) ) { mark as dirty ( ) ; return ; },selection keep value,success,obj,5,5,2,0,0,1,0,1
m total length contains the padding already,child left = get padding left ( ) + right - left - m total length ; break ; case gravity . center_horizontal :,length contains padding,success,obj,1,1,2,0,0,1,0,1
streams should have no effect .,path src = get test root path ( f sys @$ __str__ ) ; fs data output stream out = f sys . create ( src ) ; out . write char ( __str__ ) ;,streams have effect,success,obj,3,5,2,1,0,2,5,1
trailers always end the stream even if not explicitly set .,end of stream = true ; log builder . request trailers ( trailers ) ; log builder . increase request length ( ( http data ) o ) ;,trailers end stream,success,obj,2,5,2,1,0,2,5,1
ensure fc 2 has directory,assert . assert true ( is dir ( fc2 @$ path ) ) ; assert . assert true ( exists ( fc2 @$ path ) ) ; assert . assert false ( is file ( fc2 @$ path ) ) ;,fc has directory,success,obj,1,5,2,1,0,2,5,1
test pascal 255 select the fourth row,select rows ( table @$ addr ( __num__ ) ) ; selected row = table . get selected row ( ) ; perform action ( make string action @$ model ) ;,255 select row,success,obj,2,4,1,3,3,3,0,1
the bucket move will send a destroy region message .,return new distribution message observer ( ) { private volatile boolean done ; @ override public void before send message ( cluster distribution manager dm @$ distribution message message ) { if ( message instanceof destroy region message && ! done ) { task . run ( ) ; done = true ; } } } ;,move send message,success,obj,3,4,1,3,3,3,0,1
null should not impact result,current max = integer max kudaf . aggregate ( null @$ current max ) ; assert that ( __num__ @$ equal to ( current max ) ) ;,null impact result,success,obj,2,2,1,3,3,3,0,1
any request to open gets a new bogus channel,mockito . when ( mock gcs util . open ( mockito . any ( gcs path . class ) ) ) . then ( invocation -> file channel . open ( files . create temp file ( __str__ @$ __str__ ) @$ standard open option . create @$ standard open option . delete_on_close ) ) ;,request gets channel,success,obj,2,5,1,2,3,0,0,2
check row uses comparator to check we are writing in order .,if ( ! check row ( cell ) ) { if ( start offset < __num__ ) { start offset = out . size ( ) ; } rows offsetbaos . write int ( out . size ( ) - start offset ) ; } last cell = cell ; return encoder . write ( cell ) ;,row uses comparator,success,obj,3,4,1,2,3,0,0,2
contract created by create 2 @$ does n't have abi,assert . assert equals ( __num__ @$ smart contract . get abi ( ) . get entrys count ( ) ) ;,contract have abi,success,obj,3,3,2,1,0,1,4,1
check if session handler sends a goaway frame when closing,session handler . write inbound ( close message ) ; assert go away ( session handler . read outbound ( ) @$ local stream id ) ; assert null ( session handler . read outbound ( ) ) ; local stream id += __num__ ;,handler sends frame,success,obj,4,5,2,1,0,1,4,1
m total length contains the padding already,child top = m padding top + bottom - top - m total length ; break ;,length contains padding,success,obj,3,5,2,2,0,2,0,2
completing all the tasks ends the case instance,for ( task t : cmmn task service . create task query ( ) . case instance id ( case instance . get id ( ) ) . list ( ) ) { cmmn task service . complete ( t . get id ( ) ) ; } assert case instance ended ( case instance ) ;,tasks ends instance,success,obj,4,5,2,2,0,2,0,2
find installed font name always returns an available font name,return font tag . find installed font name ( get font name ( ) ) ;,name returns name,success,obj,5,5,1,2,0,3,0,1
authorization header must have a payload,if ( auth header base64 string == null || auth header base64 string . is empty ( ) ) { throw new http authentication exception ( __str__ + __str__ ) ; } return auth header base64 string ;,header have payload,success,obj,5,5,1,2,0,3,0,1
for now @$ simply assert since this class has a hardcoded name,if ( ! get name ( ) . equals ( name ) ) { throw new runtime exception ( __str__ + get name ( ) + __str__ + name + __str__ ) ; },class has name,success,obj,4,4,2,2,3,3,0,1
initialize the default edit mode .,get view ( ) . add view mode ( m_edit mode ) ; m_edit mode listener = new internal edit mode listener < node type @$ edge type > ( m_graph listeners ) ; m_edit mode . add listener ( m_edit mode listener ) ;,default edit mode,success,obj,4,5,2,2,3,3,0,1
sort these elements using insertion sort,a [ e1 ] = t ; a [ e2 ] = a [ e1 ] ;,elements using sort,success,obj,1,5,2,1,0,3,1,1
everyone can submit reservations on queue c .,verify submit reservation success ( queue_b_user @$ queuec ) ; verify submit reservation success ( queue_b_admin @$ queuec ) ; verify submit reservation success ( queue_a_user @$ queuec ) ; verify submit reservation success ( queue_a_admin @$ queuec ) ; verify submit reservation success ( common_user @$ queuec ) ;,everyone submit reservations,success,obj,1,5,2,1,0,3,1,1
let 's not store 'raw ' nulls but nodes,if ( value == null ) { value = null node ( ) ; },s store nulls,success,obj,4,4,2,0,0,1,0,1
each transform also gets its own group,list < string > expected groups = arrays . as list ( connector config . common_group @$ connector config . transforms_group @$ connector config . error_group @$ __str__ @$ __str__ ) ; assert equals ( expected groups @$ result . groups ( ) ) ; assert equals ( __num__ @$ result . error count ( ) ) ;,transform gets group,success,obj,3,2,2,0,0,1,0,1
modal bottom sheets have auto peek height by default .,assert that ( behavior . get peek height ( ) @$ is ( bottom sheet behavior . peek_height_auto ) ) ;,sheets have height,success,obj,1,3,2,1,0,1,4,2
set hll log 2 m .,_hll log2m = segment metadata properties configuration . get int ( segment_hll_log2m @$ hll constants . default_log2m ) ;,hll log m,success,obj,2,2,2,1,0,1,4,2
process named query i ds,list < string > named query ids = list named queries result . get named query ids ( ) ;,process named ds,success,obj,2,3,2,1,0,1,4,2
release app 2 's am container on node 2 .,scheduler . handle ( app removed event2 ) ; assert equals ( __str__ @$ __num__ @$ queue1 . get am resource usage ( ) . get memory size ( ) ) ; scheduler . update ( ) ;,release app container,success,obj,3,4,2,1,0,1,4,2
test non zero iterator .,iterator < element > it = vector . non zeroes ( ) . iterator ( ) ; int i = __num__ ; while ( it . has next ( ) ) { it . next ( ) ; ++ i ; },non zero iterator,success,obj,3,3,2,1,0,1,4,2
given : thread which awaited segment .,segment aware aware = new segment aware ( __num__ @$ false ) ; aware . check can read archive or reserve work segment ( __num__ ) ; try { aware . release work segment ( __num__ ) ; } catch ( assertion error e ) { return ; } fail ( __str__ ) ;,which awaited segment,success,obj,4,5,2,2,0,0,0,1
check that participant status listener is working ok,assert equals ( __str__ @$ room + __str__ @$ answer [ __num__ ] ) ; assert equals ( __str__ @$ room + __str__ @$ answer [ __num__ ] ) ;,listener working ok,success,obj,3,5,2,2,0,0,0,1
verify that the configuration now has three rules .,configuration = s3 client . get bucket lifecycle configuration ( bucket name ) ; system . out . println ( __str__ + configuration . get rules ( ) . size ( ) ) ;,configuration has rules,success,obj,2,5,2,2,0,0,0,1
unlike pql @$ sql expects the group columns in select statements .,string group by columns = string utils . join ( _group columns @$ __str__ ) ;,sql expects columns,success,obj,3,5,2,2,0,0,0,1
higher priority @$ so accept new work units,assert . assert true ( add files ( list @$ __str__ @$ __num__ ) ) ; assert . assert equals ( list . get work units ( ) . size ( ) @$ __num__ ) ;,priority accept units,success,obj,4,5,2,2,0,0,0,1
